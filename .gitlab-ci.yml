image: python

stages:
- earlytest
- fulltest
- deploy

before_script:
- apt-get update && apt-get install --no-install-recommends -y git-core
- pip install tox .[tests]

variables:
  GIT_SUBMODULE_DEPTH: 1
  GIT_SUBMODULE_STRATEGY: recursive
  PYTHONPATH: "submodules/cryptoparser:submodules/cryptoparser/submodules/cryptodatahub"

pylint:
  image: python:3.12-slim
  stage: earlytest
  script: tox -e pylint

pep8:
  image: python:3.12-slim
  stage: earlytest
  script: tox -e pep8

python3:
  image: python:3.12-slim
  stage: earlytest
  script: tox -e py312

python39:
  image: python:3.9-slim
  stage: fulltest
  script: tox -e py39

python310:
  image: python:3.10-slim
  stage: fulltest
  script: tox -e py310

python311:
  image: python:3.11-slim
  stage: fulltest
  script: tox -e py311

python313:
  image: python:3.13-slim
  stage: fulltest
  script: tox -e py313

pythonrc:
  image: python:3.14-rc-slim
  stage: fulltest
  script: tox -e py314

coveralls:
  image: python:3.12-slim
  variables:
    CI_NAME: gitlab
    CI_BUILD_NUMBER: "${CI_JOB_ID}"
    CI_BUILD_URL: "${CI_JOB_URL}"
    CI_BRANCH: "${CI_COMMIT_REF_NAME}"
    GIT_SUBMODULE_DEPTH: 1
    GIT_SUBMODULE_STRATEGY: recursive
    PYTHONPATH: "submodules/cryptoparser:submodules/cryptoparser/submodules/cryptodatahub"
  stage: deploy
  script:
    - pip install coveralls
    - pip install .
    - pip install .[tests]
    - coverage run -m unittest -v -f
    - coveralls
  only:
    refs:
      - master

dockerhub:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  variables:
    DOCKER_NAME: coroner/${CI_PROJECT_NAME}
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - if ! [ -z ${CI_COMMIT_TAG} ] ; then DOCKER_NAME="${DOCKER_NAME}:${CI_COMMIT_TAG}" ; fi
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
  script:
    - docker build -t "$DOCKER_NAME" .
    - docker push "$DOCKER_NAME"
  only:
    refs:
      - branches
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/
      - $CI_COMMIT_REF_NAME == "master"

obs:
  image: coroner/python_obs
  stage: deploy
  variables:
    GIT_SUBMODULE_DEPTH: 1
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - obs.sh
  only:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/
      - $CI_COMMIT_REF_NAME == "master"
