# -*- coding: utf-8 -*-
# pylint: disable=too-many-lines

import math

import codecs
import collections
import enum
import six
import attr

from cryptodatahub.common.algorithm import NamedGroup

from cryptoparser.common.base import Vector, VectorParamNumeric, Serializable
from cryptoparser.common.parse import ParserBinary
from cryptoparser.tls.extension import TlsNamedCurveFactory
from cryptoparser.tls.subprotocol import TlsECCurveType

from cryptolyzer.common.curves import WellKnownECParams

from .prime import is_prime, prime_precheck


@attr.s(eq=False)
class DHParameterNumbers(object):
    p = attr.ib(  # pylint: disable=invalid-name
        validator=attr.validators.instance_of(six.integer_types),
        metadata={'human_readable_name': 'p'},
    )
    g = attr.ib(  # pylint: disable=invalid-name
        validator=attr.validators.instance_of(six.integer_types),
        metadata={'human_readable_name': 'g'},
    )
    q = attr.ib(  # pylint: disable=invalid-name
        default=None,
        validator=attr.validators.optional(attr.validators.instance_of(six.integer_types)),
        metadata={'human_readable_name': 'q'},
    )

    def __eq__(self, other):
        return self.p == other.p and self.g == other.g and (self.q is None or self.q == other.q)


@attr.s
class DHPublicNumbers(object):
    y = attr.ib(  # pylint: disable=invalid-name
        validator=attr.validators.instance_of(six.integer_types),
        metadata={'human_readable_name': 'y'},
    )
    parameter_numbers = attr.ib(validator=attr.validators.instance_of(DHParameterNumbers))


@attr.s
class DHPublicKey(object):
    public_numbers = attr.ib(validator=attr.validators.instance_of(DHPublicNumbers))
    key_size = attr.ib(validator=attr.validators.instance_of(six.integer_types))


@attr.s(eq=False)
class DHParamWellKnown(Serializable):
    dh_param_numbers = attr.ib(validator=attr.validators.instance_of(DHParameterNumbers))
    name = attr.ib(validator=attr.validators.instance_of(six.string_types))
    source = attr.ib(validator=attr.validators.instance_of(six.string_types))
    key_size = attr.ib(validator=attr.validators.instance_of(six.integer_types))
    safe_prime = attr.ib(default=True, validator=attr.validators.instance_of(bool))

    def __eq__(self, other):
        return self.dh_param_numbers == other.dh_param_numbers

    def _as_markdown(self, level):
        return self._markdown_result('{} ({})'.format(self.name, self.source), level)


class WellKnownDHParams(enum.Enum):
    RFC2539_768_BIT_MODP_GROUP = DHParamWellKnown(
        dh_param_numbers=DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1' +
                '29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD' +
                'EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245' +
                'E485B576 625E7EC6 F44C42E9 A63A3620 FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=0x2,
        ),
        key_size=768,
        name='768-bit MODP Group',
        source='RFC2409/RFC2539/Oakley Group 1',
    )
    RFC2539_1024_BIT_MODP_GROUP = DHParamWellKnown(
        dh_param_numbers=DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1' +
                '29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD' +
                'EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245' +
                'E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED' +
                'EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE65381' +
                'FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=0x2,
        ),
        key_size=1024,
        name='1024-bit MODP Group',
        source='RFC2409/RFC2539/Oakley Group 2',
    )
    RFC3526_1536_BIT_MODP_GROUP = DHParamWellKnown(
        dh_param_numbers=DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1' +
                '29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD' +
                'EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245' +
                'E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED' +
                'EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D' +
                'C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F' +
                '83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D' +
                '670C354E 4ABC9804 F1746C08 CA237327 FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=0x2,
        ),
        name='1536-bit MODP Group',
        source='RFC3526/Oakley Group 5',
        key_size=1536,
    )
    RFC3526_2048_BIT_MODP_GROUP = DHParamWellKnown(
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1' +
                '29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD' +
                'EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245' +
                'E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED' +
                'EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D' +
                'C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F' +
                '83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D' +
                '670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B' +
                'E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9' +
                'DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA0510' +
                '15728E5A 8AACAA68 FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=0x2,
        ),
        name='2048-bit MODP Group',
        source='RFC3526/Oakley Group 14',
        key_size=2048,
    )
    RFC3526_3072_BIT_MODP_GROUP = DHParamWellKnown(
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1' +
                '29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD' +
                'EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245' +
                'E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED' +
                'EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D' +
                'C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F' +
                '83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D' +
                '670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B' +
                'E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9' +
                'DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA0510' +
                '15728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64' +
                'ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7' +
                'ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6B' +
                'F12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200C' +
                'BBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB31' +
                '43DB5BFC E0FD108E 4B82D120 A93AD2CA FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=0x2,
        ),
        name='3072-bit MODP Group',
        source='RFC3526/Oakley Group 15',
        key_size=3072,
    )
    RFC3526_4096_BIT_MODP_GROUP = DHParamWellKnown(
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1' +
                '29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD' +
                'EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245' +
                'E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED' +
                'EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D' +
                'C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F' +
                '83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D' +
                '670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B' +
                'E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9' +
                'DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA0510' +
                '15728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64' +
                'ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7' +
                'ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6B' +
                'F12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200C' +
                'BBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB31' +
                '43DB5BFC E0FD108E 4B82D120 A9210801 1A723C12 A787E6D7' +
                '88719A10 BDBA5B26 99C32718 6AF4E23C 1A946834 B6150BDA' +
                '2583E9CA 2AD44CE8 DBBBC2DB 04DE8EF9 2E8EFC14 1FBECAA6' +
                '287C5947 4E6BC05D 99B2964F A090C3A2 233BA186 515BE7ED' +
                '1F612970 CEE2D7AF B81BDD76 2170481C D0069127 D5B05AA9' +
                '93B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 34063199' +
                'FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=0x2,
        ),
        name='4096-bit MODP Group',
        source='RFC3526/Oakley Group 16',
        key_size=4096,
    )
    RFC3526_6144_BIT_MODP_GROUP = DHParamWellKnown(
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1 29024E08' +
                '8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD EF9519B3 CD3A431B' +
                '302B0A6D F25F1437 4FE1356D 6D51C245 E485B576 625E7EC6 F44C42E9' +
                'A637ED6B 0BFF5CB6 F406B7ED EE386BFB 5A899FA5 AE9F2411 7C4B1FE6' +
                '49286651 ECE45B3D C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8' +
                'FD24CF5F 83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D' +
                '670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B E39E772C' +
                '180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9 DE2BCBF6 95581718' +
                '3995497C EA956AE5 15D22618 98FA0510 15728E5A 8AAAC42D AD33170D' +
                '04507A33 A85521AB DF1CBA64 ECFB8504 58DBEF0A 8AEA7157 5D060C7D' +
                'B3970F85 A6E1E4C7 ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226' +
                '1AD2EE6B F12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200C' +
                'BBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB31 43DB5BFC' +
                'E0FD108E 4B82D120 A9210801 1A723C12 A787E6D7 88719A10 BDBA5B26' +
                '99C32718 6AF4E23C 1A946834 B6150BDA 2583E9CA 2AD44CE8 DBBBC2DB' +
                '04DE8EF9 2E8EFC14 1FBECAA6 287C5947 4E6BC05D 99B2964F A090C3A2' +
                '233BA186 515BE7ED 1F612970 CEE2D7AF B81BDD76 2170481C D0069127' +
                'D5B05AA9 93B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 34028492' +
                '36C3FAB4 D27C7026 C1D4DCB2 602646DE C9751E76 3DBA37BD F8FF9406' +
                'AD9E530E E5DB382F 413001AE B06A53ED 9027D831 179727B0 865A8918' +
                'DA3EDBEB CF9B14ED 44CE6CBA CED4BB1B DB7F1447 E6CC254B 33205151' +
                '2BD7AF42 6FB8F401 378CD2BF 5983CA01 C64B92EC F032EA15 D1721D03' +
                'F482D7CE 6E74FEF6 D55E702F 46980C82 B5A84031 900B1C9E 59E7C97F' +
                'BEC7E8F3 23A97A7E 36CC88BE 0F1D45B7 FF585AC5 4BD407B2 2B4154AA' +
                'CC8F6D7E BF48E1D8 14CC5ED2 0F8037E0 A79715EE F29BE328 06A1D58B' +
                'B7C5DA76 F550AA3D 8A1FBFF0 EB19CCB1 A313D55C DA56C9EC 2EF29632' +
                '387FE8D7 6E3C0468 043E8F66 3F4860EE 12BF2D5B 0B7474D6 E694F91E' +
                '6DCC4024 FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=0x2,
        ),
        name='6144-bit MODP Group/Oakley Group 17',
        source='RFC3526',
        key_size=6144,
    )
    RFC3526_8192_BIT_MODP_GROUP = DHParamWellKnown(
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1' +
                '29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD' +
                'EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245' +
                'E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED' +
                'EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D' +
                'C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F' +
                '83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D' +
                '670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B' +
                'E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9' +
                'DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA0510' +
                '15728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64' +
                'ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7' +
                'ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6B' +
                'F12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200C' +
                'BBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB31' +
                '43DB5BFC E0FD108E 4B82D120 A9210801 1A723C12 A787E6D7' +
                '88719A10 BDBA5B26 99C32718 6AF4E23C 1A946834 B6150BDA' +
                '2583E9CA 2AD44CE8 DBBBC2DB 04DE8EF9 2E8EFC14 1FBECAA6' +
                '287C5947 4E6BC05D 99B2964F A090C3A2 233BA186 515BE7ED' +
                '1F612970 CEE2D7AF B81BDD76 2170481C D0069127 D5B05AA9' +
                '93B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 34028492' +
                '36C3FAB4 D27C7026 C1D4DCB2 602646DE C9751E76 3DBA37BD' +
                'F8FF9406 AD9E530E E5DB382F 413001AE B06A53ED 9027D831' +
                '179727B0 865A8918 DA3EDBEB CF9B14ED 44CE6CBA CED4BB1B' +
                'DB7F1447 E6CC254B 33205151 2BD7AF42 6FB8F401 378CD2BF' +
                '5983CA01 C64B92EC F032EA15 D1721D03 F482D7CE 6E74FEF6' +
                'D55E702F 46980C82 B5A84031 900B1C9E 59E7C97F BEC7E8F3' +
                '23A97A7E 36CC88BE 0F1D45B7 FF585AC5 4BD407B2 2B4154AA' +
                'CC8F6D7E BF48E1D8 14CC5ED2 0F8037E0 A79715EE F29BE328' +
                '06A1D58B B7C5DA76 F550AA3D 8A1FBFF0 EB19CCB1 A313D55C' +
                'DA56C9EC 2EF29632 387FE8D7 6E3C0468 043E8F66 3F4860EE' +
                '12BF2D5B 0B7474D6 E694F91E 6DBE1159 74A3926F 12FEE5E4' +
                '38777CB6 A932DF8C D8BEC4D0 73B931BA 3BC832B6 8D9DD300' +
                '741FA7BF 8AFC47ED 2576F693 6BA42466 3AAB639C 5AE4F568' +
                '3423B474 2BF1C978 238F16CB E39D652D E3FDB8BE FC848AD9' +
                '22222E04 A4037C07 13EB57A8 1A23F0C7 3473FC64 6CEA306B' +
                '4BCBC886 2F8385DD FA9D4B7F A2C087E8 79683303 ED5BDD3A' +
                '062B3CF5 B3A278A6 6D2A13F8 3F44F82D DF310EE0 74AB6A36' +
                '4597E899 A0255DC1 64F31CC5 0846851D F9AB4819 5DED7EA1' +
                'B1D510BD 7EE74D73 FAF36BC3 1ECFA268 359046F4 EB879F92' +
                '4009438B 481C6CD7 889A002E D5EE382B C9190DA6 FC026E47' +
                '9558E447 5677E9AA 9E3050E2 765694DF C81F56E8 80B96E71' +
                '60C980DD 98EDD3DF FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=0x2,
        ),
        name='8192-bit MODP Group',
        source='RFC3526/Oakley Group 18',
        key_size=8192,
    )
    RFC5114_1024_BIT_MODP_GROUP_WITH_160_BIT_PRIME_ORDER_SUBGROUP = DHParamWellKnown(  # pylint: disable=invalid-name
        DHParameterNumbers(
            p=int((
                'B10B8F96 A080E01D DE92DE5E AE5D54EC 52C99FBC FB06A3C6' +
                '9A6A9DCA 52D23B61 6073E286 75A23D18 9838EF1E 2EE652C0' +
                '13ECB4AE A9061123 24975C3C D49B83BF ACCBDD7D 90C4BD70' +
                '98488E9C 219A7372 4EFFD6FA E5644738 FAA31A4F F55BCCC0' +
                'A151AF5F 0DC8B4BD 45BF37DF 365C1A65 E68CFDA7 6D4DA708' +
                'DF1FB2BC 2E4A4371'
            ).replace(' ', ''), 16),
            g=int((
                'A4D1CBD5 C3FD3412 6765A442 EFB99905 F8104DD2 58AC507F' +
                'D6406CFF 14266D31 266FEA1E 5C41564B 777E690F 5504F213' +
                '160217B4 B01B886A 5E91547F 9E2749F4 D7FBD7D3 B9A92EE1' +
                '909D0D22 63F80A76 A6A24C08 7A091F53 1DBF0A01 69B6A28A' +
                'D662A4D1 8E73AFA3 2D779D59 18D08BC8 858F4DCE F97C2A24' +
                '855E6EEB 22B3B2E5'
            ).replace(' ', ''), 16),
            q=int((
                'F518AA87 81A8DF27 8ABA4E7D 64B7CB9D 49462353'
            ).replace(' ', ''), 16),
        ),
        name='1024-bit MODP Group with 160-bit Prime Order Subgroup',
        source='RFC5114',
        key_size=1024,
        safe_prime=False,
    )
    RFC5114_2048_BIT_MODP_GROUP_WITH_224_BIT_PRIME_ORDER_SUBGROUP = DHParamWellKnown(  # pylint: disable=invalid-name
        DHParameterNumbers(
            p=int((
                'AD107E1E 9123A9D0 D660FAA7 9559C51F A20D64E5 683B9FD1' +
                'B54B1597 B61D0A75 E6FA141D F95A56DB AF9A3C40 7BA1DF15' +
                'EB3D688A 309C180E 1DE6B85A 1274A0A6 6D3F8152 AD6AC212' +
                '9037C9ED EFDA4DF8 D91E8FEF 55B7394B 7AD5B7D0 B6C12207' +
                'C9F98D11 ED34DBF6 C6BA0B2C 8BBC27BE 6A00E0A0 B9C49708' +
                'B3BF8A31 70918836 81286130 BC8985DB 1602E714 415D9330' +
                '278273C7 DE31EFDC 7310F712 1FD5A074 15987D9A DC0A486D' +
                'CDF93ACC 44328387 315D75E1 98C641A4 80CD86A1 B9E587E8' +
                'BE60E69C C928B2B9 C52172E4 13042E9B 23F10B0E 16E79763' +
                'C9B53DCF 4BA80A29 E3FB73C1 6B8E75B9 7EF363E2 FFA31F71' +
                'CF9DE538 4E71B81C 0AC4DFFE 0C10E64F'
            ).replace(' ', ''), 16),
            g=int((
                'AC4032EF 4F2D9AE3 9DF30B5C 8FFDAC50 6CDEBE7B 89998CAF' +
                '74866A08 CFE4FFE3 A6824A4E 10B9A6F0 DD921F01 A70C4AFA' +
                'AB739D77 00C29F52 C57DB17C 620A8652 BE5E9001 A8D66AD7' +
                'C1766910 1999024A F4D02727 5AC1348B B8A762D0 521BC98A' +
                'E2471504 22EA1ED4 09939D54 DA7460CD B5F6C6B2 50717CBE' +
                'F180EB34 118E98D1 19529A45 D6F83456 6E3025E3 16A330EF' +
                'BB77A86F 0C1AB15B 051AE3D4 28C8F8AC B70A8137 150B8EEB' +
                '10E183ED D19963DD D9E263E4 770589EF 6AA21E7F 5F2FF381' +
                'B539CCE3 409D13CD 566AFBB4 8D6C0191 81E1BCFE 94B30269' +
                'EDFE72FE 9B6AA4BD 7B5A0F1C 71CFFF4C 19C418E1 F6EC0179' +
                '81BC087F 2A7065B3 84B890D3 191F2BFA'
            ).replace(' ', ''), 16),
            q=int((
                '801C0D34 C58D93FE 99717710 1F80535A 4738CEBC BF389A99' +
                'B36371EB'
            ).replace(' ', ''), 16),
        ),
        name='2048-bit MODP Group with 224-bit Prime Order Subgroup',
        source='RFC5114',
        key_size=2048,
        safe_prime=False,
    )
    RFC5114_2048_BIT_MODP_GROUP_WITH_256_BIT_PRIME_ORDER_SUBGROUP = DHParamWellKnown(  # pylint: disable=invalid-name
        DHParameterNumbers(
            p=int((
                '87A8E61D B4B6663C FFBBD19C 65195999 8CEEF608 660DD0F2' +
                '5D2CEED4 435E3B00 E00DF8F1 D61957D4 FAF7DF45 61B2AA30' +
                '16C3D911 34096FAA 3BF4296D 830E9A7C 209E0C64 97517ABD' +
                '5A8A9D30 6BCF67ED 91F9E672 5B4758C0 22E0B1EF 4275BF7B' +
                '6C5BFC11 D45F9088 B941F54E B1E59BB8 BC39A0BF 12307F5C' +
                '4FDB70C5 81B23F76 B63ACAE1 CAA6B790 2D525267 35488A0E' +
                'F13C6D9A 51BFA4AB 3AD83477 96524D8E F6A167B5 A41825D9' +
                '67E144E5 14056425 1CCACB83 E6B486F6 B3CA3F79 71506026' +
                'C0B857F6 89962856 DED4010A BD0BE621 C3A3960A 54E710C3' +
                '75F26375 D7014103 A4B54330 C198AF12 6116D227 6E11715F' +
                '693877FA D7EF09CA DB094AE9 1E1A1597'
            ).replace(' ', ''), 16),
            g=int((
                '3FB32C9B 73134D0B 2E775066 60EDBD48 4CA7B18F 21EF2054' +
                '07F4793A 1A0BA125 10DBC150 77BE463F FF4FED4A AC0BB555' +
                'BE3A6C1B 0C6B47B1 BC3773BF 7E8C6F62 901228F8 C28CBB18' +
                'A55AE313 41000A65 0196F931 C77A57F2 DDF463E5 E9EC144B' +
                '777DE62A AAB8A862 8AC376D2 82D6ED38 64E67982 428EBC83' +
                '1D14348F 6F2F9193 B5045AF2 767164E1 DFC967C1 FB3F2E55' +
                'A4BD1BFF E83B9C80 D052B985 D182EA0A DB2A3B73 13D3FE14' +
                'C8484B1E 052588B9 B7D2BBD2 DF016199 ECD06E15 57CD0915' +
                'B3353BBB 64E0EC37 7FD02837 0DF92B52 C7891428 CDC67EB6' +
                '184B523D 1DB246C3 2F630784 90F00EF8 D647D148 D4795451' +
                '5E2327CF EF98C582 664B4C0F 6CC41659'
            ).replace(' ', ''), 16),
            q=int((
                '8CF83642 A709A097 B4479976 40129DA2 99B1A47D 1EB3750B' +
                'A308B0FE 64F5FBD3'
            ).replace(' ', ''), 16),
        ),
        name='2048-bit MODP Group with 256-bit Prime Order Subgroup',
        source='RFC5114',
        key_size=2048,
        safe_prime=False,
    )
    RFC7919_2048_BIT_FINITE_FIELD_DIFFIE_HELLMAN_GROUP = DHParamWellKnown(  # pylint: disable=invalid-name
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1' +
                'D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9' +
                '7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561' +
                '2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935' +
                '984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735' +
                '30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB' +
                'B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19' +
                '0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61' +
                '9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73' +
                '3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA' +
                '886B4238 61285C97 FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=2,
            q=int((
                '7FFFFFFF FFFFFFFF D6FC2A2C 515DA54D 57EE2B10 139E9E78' +
                'EC5CE2C1 E7169B4A D4F09B20 8A3219FD E649CEE7 124D9F7C' +
                'BE97F1B1 B1863AEC 7B40D901 576230BD 69EF8F6A EAFEB2B0' +
                '9219FA8F AF833768 42B1B2AA 9EF68D79 DAAB89AF 3FABE49A' +
                'CC278638 707345BB F15344ED 79F7F439 0EF8AC50 9B56F39A' +
                '98566527 A41D3CBD 5E0558C1 59927DB0 E88454A5 D96471FD' +
                'DCB56D5B B06BFA34 0EA7A151 EF1CA6FA 572B76F3 B1B95D8C' +
                '8583D3E4 770536B8 4F017E70 E6FBF176 601A0266 941A17B0' +
                'C8B97F4E 74C2C1FF C7278919 777940C1 E1FF1D8D A637D6B9' +
                '9DDAFE5E 17611002 E2C778C1 BE8B41D9 6379A513 60D977FD' +
                '4435A11C 30942E4B FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
        ),
        name='2048-bit Finite Field Diffie-Hellman group',
        source='RFC7919',
        key_size=2048,
    )
    RFC7919_3072_BIT_FINITE_FIELD_DIFFIE_HELLMAN_GROUP = DHParamWellKnown(  # pylint: disable=invalid-name
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1' +
                'D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9' +
                '7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561' +
                '2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935' +
                '984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735' +
                '30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB' +
                'B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19' +
                '0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61' +
                '9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73' +
                '3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA' +
                '886B4238 611FCFDC DE355B3B 6519035B BC34F4DE F99C0238' +
                '61B46FC9 D6E6C907 7AD91D26 91F7F7EE 598CB0FA C186D91C' +
                'AEFE1309 85139270 B4130C93 BC437944 F4FD4452 E2D74DD3' +
                '64F2E21E 71F54BFF 5CAE82AB 9C9DF69E E86D2BC5 22363A0D' +
                'ABC52197 9B0DEADA 1DBF9A42 D5C4484E 0ABCD06B FA53DDEF' +
                '3C1B20EE 3FD59D7C 25E41D2B 66C62E37 FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=2,
            q=int((
                '7FFFFFFF FFFFFFFF D6FC2A2C 515DA54D 57EE2B10 139E9E78' +
                'EC5CE2C1 E7169B4A D4F09B20 8A3219FD E649CEE7 124D9F7C' +
                'BE97F1B1 B1863AEC 7B40D901 576230BD 69EF8F6A EAFEB2B0' +
                '9219FA8F AF833768 42B1B2AA 9EF68D79 DAAB89AF 3FABE49A' +
                'CC278638 707345BB F15344ED 79F7F439 0EF8AC50 9B56F39A' +
                '98566527 A41D3CBD 5E0558C1 59927DB0 E88454A5 D96471FD' +
                'DCB56D5B B06BFA34 0EA7A151 EF1CA6FA 572B76F3 B1B95D8C' +
                '8583D3E4 770536B8 4F017E70 E6FBF176 601A0266 941A17B0' +
                'C8B97F4E 74C2C1FF C7278919 777940C1 E1FF1D8D A637D6B9' +
                '9DDAFE5E 17611002 E2C778C1 BE8B41D9 6379A513 60D977FD' +
                '4435A11C 308FE7EE 6F1AAD9D B28C81AD DE1A7A6F 7CCE011C' +
                '30DA37E4 EB736483 BD6C8E93 48FBFBF7 2CC6587D 60C36C8E' +
                '577F0984 C289C938 5A098649 DE21BCA2 7A7EA229 716BA6E9' +
                'B279710F 38FAA5FF AE574155 CE4EFB4F 743695E2 911B1D06' +
                'D5E290CB CD86F56D 0EDFCD21 6AE22427 055E6835 FD29EEF7' +
                '9E0D9077 1FEACEBE 12F20E95 B363171B FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
        ),
        name='3072-bit Finite Field Diffie-Hellman group',
        source='RFC7919',
        key_size=3072,
    )
    RFC7919_4096_BIT_FINITE_FIELD_DIFFIE_HELLMAN_GROUP = DHParamWellKnown(  # pylint: disable=invalid-name
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1' +
                'D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9' +
                '7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561' +
                '2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935' +
                '984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735' +
                '30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB' +
                'B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19' +
                '0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61' +
                '9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73' +
                '3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA' +
                '886B4238 611FCFDC DE355B3B 6519035B BC34F4DE F99C0238' +
                '61B46FC9 D6E6C907 7AD91D26 91F7F7EE 598CB0FA C186D91C' +
                'AEFE1309 85139270 B4130C93 BC437944 F4FD4452 E2D74DD3' +
                '64F2E21E 71F54BFF 5CAE82AB 9C9DF69E E86D2BC5 22363A0D' +
                'ABC52197 9B0DEADA 1DBF9A42 D5C4484E 0ABCD06B FA53DDEF' +
                '3C1B20EE 3FD59D7C 25E41D2B 669E1EF1 6E6F52C3 164DF4FB' +
                '7930E9E4 E58857B6 AC7D5F42 D69F6D18 7763CF1D 55034004' +
                '87F55BA5 7E31CC7A 7135C886 EFB4318A ED6A1E01 2D9E6832' +
                'A907600A 918130C4 6DC778F9 71AD0038 092999A3 33CB8B7A' +
                '1A1DB93D 7140003C 2A4ECEA9 F98D0ACC 0A8291CD CEC97DCF' +
                '8EC9B55A 7F88A46B 4DB5A851 F44182E1 C68A007E 5E655F6A' +
                'FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=2,
            q=int((
                '7FFFFFFF FFFFFFFF D6FC2A2C 515DA54D 57EE2B10 139E9E78' +
                'EC5CE2C1 E7169B4A D4F09B20 8A3219FD E649CEE7 124D9F7C' +
                'BE97F1B1 B1863AEC 7B40D901 576230BD 69EF8F6A EAFEB2B0' +
                '9219FA8F AF833768 42B1B2AA 9EF68D79 DAAB89AF 3FABE49A' +
                'CC278638 707345BB F15344ED 79F7F439 0EF8AC50 9B56F39A' +
                '98566527 A41D3CBD 5E0558C1 59927DB0 E88454A5 D96471FD' +
                'DCB56D5B B06BFA34 0EA7A151 EF1CA6FA 572B76F3 B1B95D8C' +
                '8583D3E4 770536B8 4F017E70 E6FBF176 601A0266 941A17B0' +
                'C8B97F4E 74C2C1FF C7278919 777940C1 E1FF1D8D A637D6B9' +
                '9DDAFE5E 17611002 E2C778C1 BE8B41D9 6379A513 60D977FD' +
                '4435A11C 308FE7EE 6F1AAD9D B28C81AD DE1A7A6F 7CCE011C' +
                '30DA37E4 EB736483 BD6C8E93 48FBFBF7 2CC6587D 60C36C8E' +
                '577F0984 C289C938 5A098649 DE21BCA2 7A7EA229 716BA6E9' +
                'B279710F 38FAA5FF AE574155 CE4EFB4F 743695E2 911B1D06' +
                'D5E290CB CD86F56D 0EDFCD21 6AE22427 055E6835 FD29EEF7' +
                '9E0D9077 1FEACEBE 12F20E95 B34F0F78 B737A961 8B26FA7D' +
                'BC9874F2 72C42BDB 563EAFA1 6B4FB68C 3BB1E78E AA81A002' +
                '43FAADD2 BF18E63D 389AE443 77DA18C5 76B50F00 96CF3419' +
                '5483B005 48C09862 36E3BC7C B8D6801C 0494CCD1 99E5C5BD' +
                '0D0EDC9E B8A0001E 15276754 FCC68566 054148E6 E764BEE7' +
                'C764DAAD 3FC45235 A6DAD428 FA20C170 E345003F 2F32AFB5' +
                '7FFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
        ),
        name='4096-bit Finite Field Diffie-Hellman group',
        source='RFC7919',
        key_size=4096,
    )
    RFC7919_6144_BIT_FINITE_FIELD_DIFFIE_HELLMAN_GROUP = DHParamWellKnown(  # pylint: disable=invalid-name
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1' +
                'D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9' +
                '7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561' +
                '2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935' +
                '984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735' +
                '30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB' +
                'B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19' +
                '0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61' +
                '9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73' +
                '3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA' +
                '886B4238 611FCFDC DE355B3B 6519035B BC34F4DE F99C0238' +
                '61B46FC9 D6E6C907 7AD91D26 91F7F7EE 598CB0FA C186D91C' +
                'AEFE1309 85139270 B4130C93 BC437944 F4FD4452 E2D74DD3' +
                '64F2E21E 71F54BFF 5CAE82AB 9C9DF69E E86D2BC5 22363A0D' +
                'ABC52197 9B0DEADA 1DBF9A42 D5C4484E 0ABCD06B FA53DDEF' +
                '3C1B20EE 3FD59D7C 25E41D2B 669E1EF1 6E6F52C3 164DF4FB' +
                '7930E9E4 E58857B6 AC7D5F42 D69F6D18 7763CF1D 55034004' +
                '87F55BA5 7E31CC7A 7135C886 EFB4318A ED6A1E01 2D9E6832' +
                'A907600A 918130C4 6DC778F9 71AD0038 092999A3 33CB8B7A' +
                '1A1DB93D 7140003C 2A4ECEA9 F98D0ACC 0A8291CD CEC97DCF' +
                '8EC9B55A 7F88A46B 4DB5A851 F44182E1 C68A007E 5E0DD902' +
                '0BFD64B6 45036C7A 4E677D2C 38532A3A 23BA4442 CAF53EA6' +
                '3BB45432 9B7624C8 917BDD64 B1C0FD4C B38E8C33 4C701C3A' +
                'CDAD0657 FCCFEC71 9B1F5C3E 4E46041F 388147FB 4CFDB477' +
                'A52471F7 A9A96910 B855322E DB6340D8 A00EF092 350511E3' +
                '0ABEC1FF F9E3A26E 7FB29F8C 183023C3 587E38DA 0077D9B4' +
                '763E4E4B 94B2BBC1 94C6651E 77CAF992 EEAAC023 2A281BF6' +
                'B3A739C1 22611682 0AE8DB58 47A67CBE F9C9091B 462D538C' +
                'D72B0374 6AE77F5E 62292C31 1562A846 505DC82D B854338A' +
                'E49F5235 C95B9117 8CCF2DD5 CACEF403 EC9D1810 C6272B04' +
                '5B3B71F9 DC6B80D6 3FDD4A8E 9ADB1E69 62A69526 D43161C1' +
                'A41D570D 7938DAD4 A40E329C D0E40E65 FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=2,
            q=int((
                '7FFFFFFF FFFFFFFF D6FC2A2C 515DA54D 57EE2B10 139E9E78' +
                'EC5CE2C1 E7169B4A D4F09B20 8A3219FD E649CEE7 124D9F7C' +
                'BE97F1B1 B1863AEC 7B40D901 576230BD 69EF8F6A EAFEB2B0' +
                '9219FA8F AF833768 42B1B2AA 9EF68D79 DAAB89AF 3FABE49A' +
                'CC278638 707345BB F15344ED 79F7F439 0EF8AC50 9B56F39A' +
                '98566527 A41D3CBD 5E0558C1 59927DB0 E88454A5 D96471FD' +
                'DCB56D5B B06BFA34 0EA7A151 EF1CA6FA 572B76F3 B1B95D8C' +
                '8583D3E4 770536B8 4F017E70 E6FBF176 601A0266 941A17B0' +
                'C8B97F4E 74C2C1FF C7278919 777940C1 E1FF1D8D A637D6B9' +
                '9DDAFE5E 17611002 E2C778C1 BE8B41D9 6379A513 60D977FD' +
                '4435A11C 308FE7EE 6F1AAD9D B28C81AD DE1A7A6F 7CCE011C' +
                '30DA37E4 EB736483 BD6C8E93 48FBFBF7 2CC6587D 60C36C8E' +
                '577F0984 C289C938 5A098649 DE21BCA2 7A7EA229 716BA6E9' +
                'B279710F 38FAA5FF AE574155 CE4EFB4F 743695E2 911B1D06' +
                'D5E290CB CD86F56D 0EDFCD21 6AE22427 055E6835 FD29EEF7' +
                '9E0D9077 1FEACEBE 12F20E95 B34F0F78 B737A961 8B26FA7D' +
                'BC9874F2 72C42BDB 563EAFA1 6B4FB68C 3BB1E78E AA81A002' +
                '43FAADD2 BF18E63D 389AE443 77DA18C5 76B50F00 96CF3419' +
                '5483B005 48C09862 36E3BC7C B8D6801C 0494CCD1 99E5C5BD' +
                '0D0EDC9E B8A0001E 15276754 FCC68566 054148E6 E764BEE7' +
                'C764DAAD 3FC45235 A6DAD428 FA20C170 E345003F 2F06EC81' +
                '05FEB25B 2281B63D 2733BE96 1C29951D 11DD2221 657A9F53' +
                '1DDA2A19 4DBB1264 48BDEEB2 58E07EA6 59C74619 A6380E1D' +
                '66D6832B FE67F638 CD8FAE1F 2723020F 9C40A3FD A67EDA3B' +
                'D29238FB D4D4B488 5C2A9917 6DB1A06C 50077849 1A8288F1' +
                '855F60FF FCF1D137 3FD94FC6 0C1811E1 AC3F1C6D 003BECDA' +
                '3B1F2725 CA595DE0 CA63328F 3BE57CC9 77556011 95140DFB' +
                '59D39CE0 91308B41 05746DAC 23D33E5F 7CE4848D A316A9C6' +
                '6B9581BA 3573BFAF 31149618 8AB15423 282EE416 DC2A19C5' +
                '724FA91A E4ADC88B C66796EA E5677A01 F64E8C08 63139582' +
                '2D9DB8FC EE35C06B 1FEEA547 4D6D8F34 B1534A93 6A18B0E0' +
                'D20EAB86 BC9C6D6A 5207194E 68720732 FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
        ),
        name='6144-bit Finite Field Diffie-Hellman group',
        source='RFC7919',
        key_size=6144,
    )
    RFC7919_8192_BIT_FINITE_FIELD_DIFFIE_HELLMAN_GROUP = DHParamWellKnown(  # pylint: disable=invalid-name
        DHParameterNumbers(
            p=int((
                'FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1' +
                'D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9' +
                '7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561' +
                '2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935' +
                '984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735' +
                '30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB' +
                'B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19' +
                '0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61' +
                '9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73' +
                '3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA' +
                '886B4238 611FCFDC DE355B3B 6519035B BC34F4DE F99C0238' +
                '61B46FC9 D6E6C907 7AD91D26 91F7F7EE 598CB0FA C186D91C' +
                'AEFE1309 85139270 B4130C93 BC437944 F4FD4452 E2D74DD3' +
                '64F2E21E 71F54BFF 5CAE82AB 9C9DF69E E86D2BC5 22363A0D' +
                'ABC52197 9B0DEADA 1DBF9A42 D5C4484E 0ABCD06B FA53DDEF' +
                '3C1B20EE 3FD59D7C 25E41D2B 669E1EF1 6E6F52C3 164DF4FB' +
                '7930E9E4 E58857B6 AC7D5F42 D69F6D18 7763CF1D 55034004' +
                '87F55BA5 7E31CC7A 7135C886 EFB4318A ED6A1E01 2D9E6832' +
                'A907600A 918130C4 6DC778F9 71AD0038 092999A3 33CB8B7A' +
                '1A1DB93D 7140003C 2A4ECEA9 F98D0ACC 0A8291CD CEC97DCF' +
                '8EC9B55A 7F88A46B 4DB5A851 F44182E1 C68A007E 5E0DD902' +
                '0BFD64B6 45036C7A 4E677D2C 38532A3A 23BA4442 CAF53EA6' +
                '3BB45432 9B7624C8 917BDD64 B1C0FD4C B38E8C33 4C701C3A' +
                'CDAD0657 FCCFEC71 9B1F5C3E 4E46041F 388147FB 4CFDB477' +
                'A52471F7 A9A96910 B855322E DB6340D8 A00EF092 350511E3' +
                '0ABEC1FF F9E3A26E 7FB29F8C 183023C3 587E38DA 0077D9B4' +
                '763E4E4B 94B2BBC1 94C6651E 77CAF992 EEAAC023 2A281BF6' +
                'B3A739C1 22611682 0AE8DB58 47A67CBE F9C9091B 462D538C' +
                'D72B0374 6AE77F5E 62292C31 1562A846 505DC82D B854338A' +
                'E49F5235 C95B9117 8CCF2DD5 CACEF403 EC9D1810 C6272B04' +
                '5B3B71F9 DC6B80D6 3FDD4A8E 9ADB1E69 62A69526 D43161C1' +
                'A41D570D 7938DAD4 A40E329C CFF46AAA 36AD004C F600C838' +
                '1E425A31 D951AE64 FDB23FCE C9509D43 687FEB69 EDD1CC5E' +
                '0B8CC3BD F64B10EF 86B63142 A3AB8829 555B2F74 7C932665' +
                'CB2C0F1C C01BD702 29388839 D2AF05E4 54504AC7 8B758282' +
                '2846C0BA 35C35F5C 59160CC0 46FD8251 541FC68C 9C86B022' +
                'BB709987 6A460E74 51A8A931 09703FEE 1C217E6C 3826E52C' +
                '51AA691E 0E423CFC 99E9E316 50C1217B 624816CD AD9A95F9' +
                'D5B80194 88D9C0A0 A1FE3075 A577E231 83F81D4A 3F2FA457' +
                '1EFC8CE0 BA8A4FE8 B6855DFE 72B0A66E DED2FBAB FBE58A30' +
                'FAFABE1C 5D71A87E 2F741EF8 C1FE86FE A6BBFDE5 30677F0D' +
                '97D11D49 F7A8443D 0822E506 A9F4614E 011E2A94 838FF88C' +
                'D68C8BB7 C5C6424C FFFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
            g=2,
            q=int((
                '7FFFFFFF FFFFFFFF D6FC2A2C 515DA54D 57EE2B10 139E9E78' +
                'EC5CE2C1 E7169B4A D4F09B20 8A3219FD E649CEE7 124D9F7C' +
                'BE97F1B1 B1863AEC 7B40D901 576230BD 69EF8F6A EAFEB2B0' +
                '9219FA8F AF833768 42B1B2AA 9EF68D79 DAAB89AF 3FABE49A' +
                'CC278638 707345BB F15344ED 79F7F439 0EF8AC50 9B56F39A' +
                '98566527 A41D3CBD 5E0558C1 59927DB0 E88454A5 D96471FD' +
                'DCB56D5B B06BFA34 0EA7A151 EF1CA6FA 572B76F3 B1B95D8C' +
                '8583D3E4 770536B8 4F017E70 E6FBF176 601A0266 941A17B0' +
                'C8B97F4E 74C2C1FF C7278919 777940C1 E1FF1D8D A637D6B9' +
                '9DDAFE5E 17611002 E2C778C1 BE8B41D9 6379A513 60D977FD' +
                '4435A11C 308FE7EE 6F1AAD9D B28C81AD DE1A7A6F 7CCE011C' +
                '30DA37E4 EB736483 BD6C8E93 48FBFBF7 2CC6587D 60C36C8E' +
                '577F0984 C289C938 5A098649 DE21BCA2 7A7EA229 716BA6E9' +
                'B279710F 38FAA5FF AE574155 CE4EFB4F 743695E2 911B1D06' +
                'D5E290CB CD86F56D 0EDFCD21 6AE22427 055E6835 FD29EEF7' +
                '9E0D9077 1FEACEBE 12F20E95 B34F0F78 B737A961 8B26FA7D' +
                'BC9874F2 72C42BDB 563EAFA1 6B4FB68C 3BB1E78E AA81A002' +
                '43FAADD2 BF18E63D 389AE443 77DA18C5 76B50F00 96CF3419' +
                '5483B005 48C09862 36E3BC7C B8D6801C 0494CCD1 99E5C5BD' +
                '0D0EDC9E B8A0001E 15276754 FCC68566 054148E6 E764BEE7' +
                'C764DAAD 3FC45235 A6DAD428 FA20C170 E345003F 2F06EC81' +
                '05FEB25B 2281B63D 2733BE96 1C29951D 11DD2221 657A9F53' +
                '1DDA2A19 4DBB1264 48BDEEB2 58E07EA6 59C74619 A6380E1D' +
                '66D6832B FE67F638 CD8FAE1F 2723020F 9C40A3FD A67EDA3B' +
                'D29238FB D4D4B488 5C2A9917 6DB1A06C 50077849 1A8288F1' +
                '855F60FF FCF1D137 3FD94FC6 0C1811E1 AC3F1C6D 003BECDA' +
                '3B1F2725 CA595DE0 CA63328F 3BE57CC9 77556011 95140DFB' +
                '59D39CE0 91308B41 05746DAC 23D33E5F 7CE4848D A316A9C6' +
                '6B9581BA 3573BFAF 31149618 8AB15423 282EE416 DC2A19C5' +
                '724FA91A E4ADC88B C66796EA E5677A01 F64E8C08 63139582' +
                '2D9DB8FC EE35C06B 1FEEA547 4D6D8F34 B1534A93 6A18B0E0' +
                'D20EAB86 BC9C6D6A 5207194E 67FA3555 1B568026 7B00641C' +
                '0F212D18 ECA8D732 7ED91FE7 64A84EA1 B43FF5B4 F6E8E62F' +
                '05C661DE FB258877 C35B18A1 51D5C414 AAAD97BA 3E499332' +
                'E596078E 600DEB81 149C441C E95782F2 2A282563 C5BAC141' +
                '1423605D 1AE1AFAE 2C8B0660 237EC128 AA0FE346 4E435811' +
                '5DB84CC3 B523073A 28D45498 84B81FF7 0E10BF36 1C137296' +
                '28D5348F 07211E7E 4CF4F18B 286090BD B1240B66 D6CD4AFC' +
                'EADC00CA 446CE050 50FF183A D2BBF118 C1FC0EA5 1F97D22B' +
                '8F7E4670 5D4527F4 5B42AEFF 39585337 6F697DD5 FDF2C518' +
                '7D7D5F0E 2EB8D43F 17BA0F7C 60FF437F 535DFEF2 9833BF86' +
                'CBE88EA4 FBD4221E 84117283 54FA30A7 008F154A 41C7FC46' +
                '6B4645DB E2E32126 7FFFFFFF FFFFFFFF'
            ).replace(' ', ''), 16),
        ),
        name='8192-bit Finite Field Diffie-Hellman group',
        source='RFC7919',
        key_size=8192,
    )
    APPLICATION_SERVER_POSTFIX_VERSION_2_2_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x88, 0x3F, 0x00, 0xAF, 0xFC, 0x0C, 0x8A, 0xB8, 0x35, 0xCD, 0xE5, 0xC2,
                0x0F, 0x55, 0xDF, 0x06, 0x3F, 0x16, 0x07, 0xBF, 0xCE, 0x13, 0x35, 0xE4,
                0x1C, 0x1E, 0x03, 0xF3, 0xAB, 0x17, 0xF6, 0x63, 0x50, 0x63, 0x67, 0x3E,
                0x10, 0xD7, 0x3E, 0xB4, 0xEB, 0x46, 0x8C, 0x40, 0x50, 0xE6, 0x91, 0xA5,
                0x6E, 0x01, 0x45, 0xDE, 0xC9, 0xB1, 0x1F, 0x64, 0x54, 0xFA, 0xD9, 0xAB,
                0x4F, 0x70, 0xBA, 0x5B,
            ])), 16),
            g=0x2,
        ),
        name='Postfix 2.2 builtin DH 512-bit',
        source='Postfix source code',
        key_size=512,
    )
    APPLICATION_SERVER_POSTFIX_VERSION_2_2_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xB0, 0xFE, 0xB4, 0xCF, 0xD4, 0x55, 0x07, 0xE7, 0xCC, 0x88, 0x59, 0x0D,
                0x17, 0x26, 0xC5, 0x0C, 0xA5, 0x4A, 0x92, 0x23, 0x81, 0x78, 0xDA, 0x88,
                0xAA, 0x4C, 0x13, 0x06, 0xBF, 0x5D, 0x2F, 0x9E, 0xBC, 0x96, 0xB8, 0x51,
                0x00, 0x9D, 0x0C, 0x0D, 0x75, 0xAD, 0xFD, 0x3B, 0xB1, 0x7E, 0x71, 0x4F,
                0x3F, 0x91, 0x54, 0x14, 0x44, 0xB8, 0x30, 0x25, 0x1C, 0xEB, 0xDF, 0x72,
                0x9C, 0x4C, 0xF1, 0x89, 0x0D, 0x68, 0x3F, 0x94, 0x8E, 0xA4, 0xFB, 0x76,
                0x89, 0x18, 0xB2, 0x91, 0x16, 0x90, 0x01, 0x99, 0x66, 0x8C, 0x53, 0x81,
                0x4E, 0x27, 0x3D, 0x99, 0xE7, 0x5A, 0x7A, 0xAF, 0xD5, 0xEC, 0xE2, 0x7E,
                0xFA, 0xED, 0x01, 0x18, 0xC2, 0x78, 0x25, 0x59, 0x06, 0x5C, 0x39, 0xF6,
                0xCD, 0x49, 0x54, 0xAF, 0xC1, 0xB1, 0xEA, 0x4A, 0xF9, 0x53, 0xD0, 0xDF,
                0x6D, 0xAF, 0xD4, 0x93, 0xE7, 0xBA, 0xAE, 0x9B,
            ])), 16),
            g=0x2,
        ),
        name='Postfix 2.2 builtin DH 1024-bit',
        source='Postfix source code',
        key_size=1024,
    )
    APPLICATION_SERVER_POSTFIX_VERSION_3_1_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x30, 0x46, 0x02, 0x41, 0x00, 0xd8, 0xbf, 0x11, 0xd6, 0x41, 0x2a, 0x7a,
                0x9c, 0x78, 0xb2, 0xaa, 0x41, 0x23, 0x0a, 0xdc, 0xcf, 0xb7, 0x19, 0xc5,
                0x16, 0x4c, 0xcb, 0x4a, 0xd0, 0xd2, 0x1f, 0x1f, 0x70, 0x24, 0x86, 0x6f,
                0x51, 0x52, 0xc6, 0x5b, 0x28, 0xbb, 0x82, 0xe1, 0x24, 0x91, 0x3d, 0x4d,
                0x95, 0x56, 0xf8, 0x0b, 0x2c, 0xe0, 0x36, 0x67, 0x88, 0x64, 0x15, 0x1f,
                0x45, 0xd5, 0xb8, 0x0a, 0x00, 0x03, 0x76, 0x32, 0x0b, 0x02, 0x01, 0x02,
            ])), 16),
            g=0x2,
        ),
        name='Postfix 3.1 builtin DH 512-bit',
        source='Postfix source code',
        key_size=512,
    )
    APPLICATION_SERVER_POSTFIX_VERSION_3_1_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x30, 0x82, 0x01, 0x08, 0x02, 0x82, 0x01, 0x01, 0x00, 0xbf, 0x28, 0x1b,
                0x68, 0x69, 0x90, 0x2f, 0x37, 0x9f, 0x5a, 0x50, 0x23, 0x73, 0x2c, 0x11,
                0xf2, 0xac, 0x7c, 0x3e, 0x58, 0xb9, 0x23, 0x3e, 0x02, 0x07, 0x4d, 0xba,
                0xd9, 0x2c, 0xc1, 0x9e, 0xf9, 0xc4, 0x2f, 0xbc, 0x8d, 0x86, 0x4b, 0x2a,
                0x87, 0x86, 0x93, 0x32, 0x0f, 0x72, 0x40, 0xfe, 0x7e, 0xa2, 0xc1, 0x32,
                0xf0, 0x65, 0x9c, 0xc3, 0x19, 0x25, 0x2d, 0xeb, 0x6a, 0x49, 0x94, 0x79,
                0x2d, 0xa1, 0xbe, 0x05, 0x26, 0xac, 0x8d, 0x69, 0xdc, 0x2e, 0x7e, 0xb5,
                0xfd, 0x3c, 0x2b, 0x7d, 0x43, 0x22, 0x53, 0xf6, 0x1e, 0x04, 0x45, 0xd7,
                0x53, 0x84, 0xfd, 0x6b, 0x12, 0x72, 0x47, 0x04, 0xaf, 0xa4, 0xac, 0x4b,
                0x55, 0xb6, 0x79, 0x42, 0x40, 0x88, 0x54, 0x48, 0xd5, 0x4d, 0x3a, 0xb2,
                0xbf, 0x6c, 0x26, 0x95, 0x29, 0xdd, 0x8b, 0x9e, 0xed, 0xb8, 0x60, 0x8e,
                0xb5, 0x35, 0xb6, 0x22, 0x44, 0x1f, 0xfb, 0x56, 0x74, 0xfe, 0xf0, 0x2c,
                0xe6, 0x0c, 0x22, 0xc9, 0x35, 0xb3, 0x1b, 0x96, 0xbb, 0x0a, 0x5a, 0xc3,
                0x09, 0xa0, 0xcc, 0xa5, 0x40, 0x90, 0x0f, 0x59, 0xa2, 0x89, 0x69, 0x2a,
                0x69, 0x79, 0xe4, 0xd3, 0x24, 0xc6, 0x8c, 0xda, 0xbc, 0x98, 0x3a, 0x5b,
                0x16, 0xae, 0x63, 0x6c, 0x0b, 0x43, 0x4f, 0xf3, 0x2e, 0xc8, 0xa9, 0x6b,
                0x58, 0x6a, 0xa9, 0x8e, 0x64, 0x09, 0x3d, 0x88, 0x44, 0x4f, 0x97, 0x2c,
                0x1d, 0x98, 0xb0, 0xa9, 0xc0, 0xb6, 0x8d, 0x19, 0x37, 0x1f, 0xb7, 0xc9,
                0x86, 0xa8, 0xdc, 0x37, 0x4d, 0x64, 0x27, 0xf3, 0xf5, 0x2b, 0x7b, 0x6b,
                0x76, 0x84, 0x3f, 0xc1, 0x23, 0x97, 0x2d, 0x71, 0xf7, 0xb6, 0xc2, 0x35,
                0x28, 0x10, 0x96, 0xd6, 0x69, 0x0c, 0x2e, 0x1f, 0x9f, 0xdf, 0x82, 0x81,
                0x57, 0x57, 0x39, 0xa5, 0xf2, 0x81, 0x29, 0x57, 0xf9, 0x2f, 0xd0, 0x03,
                0xab, 0x02, 0x01, 0x02,
            ])), 16),
            g=0x2,
        ),
        name='Postfix 3.1 builtin DH 2048-bit',
        source='Postfix source code',
        key_size=2048,
    )
    APPLICATION_SERVER_POSTFIX_VERSION_3_6_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
               0x30, 0x82, 0x01, 0x08, 0x02, 0x82, 0x01, 0x01, 0x00, 0x9e, 0x28, 0x15,
               0xc5, 0xcc, 0x9b, 0x5a, 0xb0, 0xe9, 0xab, 0x74, 0x8b, 0x2a, 0x23, 0xce,
               0xea, 0x87, 0xa0, 0x18, 0x09, 0xd0, 0x40, 0x2c, 0x93, 0x23, 0x5d, 0xc0,
               0xe9, 0x78, 0x2c, 0x53, 0xd9, 0x3e, 0x21, 0x14, 0x89, 0x5c, 0x79, 0x73,
               0x1e, 0xbd, 0x23, 0x1e, 0x18, 0x65, 0x6d, 0xd2, 0x3c, 0xeb, 0x41, 0xca,
               0xbb, 0xa9, 0x99, 0x55, 0x84, 0xae, 0x9e, 0x70, 0x57, 0x25, 0x21, 0x42,
               0xaa, 0xdb, 0x82, 0xc6, 0xe6, 0xf1, 0xcf, 0xb7, 0xbc, 0x2a, 0x56, 0xcc,
               0x55, 0x1f, 0xad, 0xe9, 0x68, 0x18, 0x22, 0xfc, 0x09, 0x62, 0xc3, 0x32,
               0x1b, 0x05, 0x1f, 0xce, 0xec, 0xe3, 0x6d, 0xb5, 0x79, 0xe0, 0x89, 0x45,
               0xf3, 0xf3, 0x26, 0xa3, 0x81, 0xd9, 0x59, 0xee, 0xed, 0x78, 0xbe, 0x0e,
               0xdd, 0xf7, 0xef, 0xcb, 0x81, 0x3f, 0x01, 0xb7, 0x10, 0x8f, 0x0d, 0xbe,
               0x29, 0x21, 0x13, 0xff, 0x2a, 0x13, 0x25, 0x75, 0x99, 0xec, 0xf5, 0x2d,
               0x49, 0x01, 0x1d, 0xa4, 0x13, 0xe8, 0x2c, 0xc8, 0x13, 0x60, 0x57, 0x98,
               0xb1, 0x06, 0x45, 0x77, 0xa4, 0x24, 0xf9, 0x27, 0x3f, 0x08, 0xe6, 0x9b,
               0x4b, 0x20, 0x3b, 0x43, 0x69, 0xa3, 0xcc, 0x9a, 0xc4, 0x3c, 0x1e, 0xec,
               0xb7, 0x35, 0xe4, 0x59, 0x6b, 0x6d, 0x2a, 0xdf, 0xf7, 0x0b, 0xd4, 0x5a,
               0x0f, 0x79, 0x80, 0xe1, 0x75, 0x4c, 0x10, 0xea, 0x26, 0xf0, 0xd5, 0xf3,
               0xa6, 0x15, 0xa9, 0x3e, 0x3d, 0x0d, 0xb8, 0x53, 0x50, 0x49, 0x77, 0x49,
               0x47, 0x43, 0x39, 0xee, 0xb8, 0x8a, 0xe5, 0x14, 0xc4, 0xe3, 0x10, 0xfb,
               0xf5, 0x52, 0xef, 0xa5, 0x8f, 0xa4, 0x7e, 0x57, 0xb9, 0x5f, 0xda, 0x00,
               0x18, 0xf0, 0x72, 0x29, 0xd4, 0xfe, 0x90, 0x5a, 0x1f, 0x1a, 0x40, 0xee,
               0x4e, 0xfa, 0x3e, 0xf3, 0x72, 0x4b, 0xea, 0x44, 0x53, 0x43, 0x53, 0x57,
               0x9b, 0x02, 0x01, 0x02,
            ])), 16),
            g=0x2,
        ),
        name='Postfix 3.6 builtin DH 2048-bit',
        source='Postfix source code',
        key_size=2048,
    )
    APPLICATION_SERVER_POSTFIX_VERSION_3_7_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x30, 0x82, 0x01, 0x08, 0x02, 0x82, 0x01, 0x01, 0x00, 0xec, 0x02, 0x7b,
                0x74, 0xc6, 0xd4, 0xb4, 0x89, 0x68, 0xfd, 0xbc, 0xe0, 0x82, 0xae, 0xd6,
                0xf1, 0x4d, 0x93, 0xaa, 0x47, 0x07, 0x84, 0x3d, 0x86, 0xf8, 0x47, 0xf7,
                0xdf, 0x08, 0x7b, 0xca, 0x04, 0xa4, 0x72, 0xec, 0x11, 0xe2, 0x38, 0x43,
                0xb7, 0x94, 0xab, 0xaf, 0xe2, 0x85, 0x59, 0x43, 0x4e, 0x71, 0x85, 0xfe,
                0x52, 0x0c, 0xe0, 0x1c, 0xb6, 0xc7, 0xb0, 0x1b, 0x06, 0xb3, 0x4d, 0x1b,
                0x4f, 0xf6, 0x4b, 0x45, 0xbd, 0x1d, 0xb8, 0xe4, 0xa4, 0x48, 0x09, 0x28,
                0x19, 0xd7, 0xce, 0xb1, 0xe5, 0x9a, 0xc4, 0x94, 0x55, 0xde, 0x4d, 0x86,
                0x0f, 0x4c, 0x5e, 0x25, 0x51, 0x6c, 0x96, 0xca, 0xfa, 0xe3, 0x01, 0x69,
                0x82, 0x6c, 0x8f, 0xf5, 0xe7, 0x0e, 0xb7, 0x8e, 0x52, 0xf1, 0xcf, 0x0b,
                0x67, 0x10, 0xd0, 0xb3, 0x77, 0x79, 0xa4, 0xc1, 0xd0, 0x0f, 0x3f, 0xf5,
                0x5c, 0x35, 0xf9, 0x46, 0xd2, 0xc7, 0xfb, 0x97, 0x6d, 0xd5, 0xbe, 0xe4,
                0x8b, 0x5a, 0xf2, 0x88, 0xfa, 0x47, 0xdc, 0xc2, 0x4a, 0x4d, 0x69, 0xd3,
                0x2a, 0xdf, 0x55, 0x6c, 0x5f, 0x71, 0x11, 0x1e, 0x87, 0x03, 0x68, 0xe1,
                0xf4, 0x21, 0x06, 0x63, 0xd9, 0x65, 0xd4, 0x0c, 0x4d, 0xa7, 0x1f, 0x15,
                0x53, 0x3a, 0x50, 0x1a, 0xf5, 0x9b, 0x50, 0x35, 0xe0, 0x16, 0xa1, 0xd7,
                0xe6, 0xbf, 0xd7, 0xd9, 0xd9, 0x53, 0xe5, 0x8b, 0xf8, 0x7b, 0x45, 0x46,
                0xb6, 0xac, 0x50, 0x16, 0x46, 0x42, 0xca, 0x76, 0x38, 0x4b, 0x8e, 0x83,
                0xc6, 0x73, 0x13, 0x9c, 0x03, 0xd1, 0x7a, 0x3d, 0x8d, 0x99, 0x34, 0x10,
                0x79, 0x67, 0x21, 0x23, 0xf9, 0x6f, 0x48, 0x9a, 0xa6, 0xde, 0xbf, 0x7f,
                0x9c, 0x16, 0x53, 0xff, 0xf7, 0x20, 0x96, 0xeb, 0x34, 0xcb, 0x5b, 0x85,
                0x2b, 0x7c, 0x98, 0x00, 0x23, 0x47, 0xce, 0xc2, 0x58, 0x12, 0x86, 0x2c,
                0x57, 0x02, 0x01, 0x02,
            ])), 16),
            g=0x2,
        ),
        name='Postfix 3.7 builtin DH 2048-bit',
        source='Postfix source code',
        key_size=2048,
    )
    APPLICATION_SERVER_HAPROXY_VERSION_1_6_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xFA, 0xF9, 0x2A, 0x22, 0x2A, 0xA7, 0x7F, 0xE1, 0x67, 0x4E, 0x53, 0xF7,
                0x56, 0x13, 0xC3, 0xB1, 0xE3, 0x29, 0x6B, 0x66, 0x31, 0x6A, 0x7F, 0xB3,
                0xC2, 0x68, 0x6B, 0xCB, 0x1D, 0x57, 0x39, 0x1D, 0x1F, 0xFF, 0x1C, 0xC9,
                0xA6, 0xA4, 0x98, 0x82, 0x31, 0x5D, 0x25, 0xFF, 0x8A, 0xE0, 0x73, 0x96,
                0x81, 0xC8, 0x83, 0x79, 0xC1, 0x5A, 0x04, 0xF8, 0x37, 0x0D, 0xA8, 0x3D,
                0xAE, 0x74, 0xBC, 0xDB, 0xB6, 0xA4, 0x75, 0xD9, 0x71, 0x8A, 0xA0, 0x17,
                0x9E, 0x2D, 0xC8, 0xA8, 0xDF, 0x2C, 0x5F, 0x82, 0x95, 0xF8, 0x92, 0x9B,
                0xA7, 0x33, 0x5F, 0x89, 0x71, 0xC8, 0x2D, 0x6B, 0x18, 0x86, 0xC4, 0x94,
                0x22, 0xA5, 0x52, 0x8D, 0xF6, 0xF6, 0xD2, 0x37, 0x92, 0x0F, 0xA5, 0xCC,
                0xDB, 0x7B, 0x1D, 0x3D, 0xA1, 0x31, 0xB7, 0x80, 0x8F, 0x0B, 0x67, 0x5E,
                0x36, 0xA5, 0x60, 0x0C, 0xF1, 0x95, 0x33, 0x8B,
            ])), 16),
            g=0x2,
        ),
        name='HAProxy 1.6 builtin DH 1024-bit',
        source='HAProxy source code',
        key_size=1024,
    )
    APPLICATION_SERVER_HAPROXY_VERSION_1_6_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xEC, 0x86, 0xF8, 0x70, 0xA0, 0x33, 0x16, 0xEC, 0x05, 0x1A, 0x73, 0x59,
                0xCD, 0x1F, 0x8B, 0xF8, 0x29, 0xE4, 0xD2, 0xCF, 0x52, 0xDD, 0xC2, 0x24,
                0x8D, 0xB5, 0x38, 0x9A, 0xFB, 0x5C, 0xA4, 0xE4, 0xB2, 0xDA, 0xCE, 0x66,
                0x50, 0x74, 0xA6, 0x85, 0x4D, 0x4B, 0x1D, 0x30, 0xB8, 0x2B, 0xF3, 0x10,
                0xE9, 0xA7, 0x2D, 0x05, 0x71, 0xE7, 0x81, 0xDF, 0x8B, 0x59, 0x52, 0x3B,
                0x5F, 0x43, 0x0B, 0x68, 0xF1, 0xDB, 0x07, 0xBE, 0x08, 0x6B, 0x1B, 0x23,
                0xEE, 0x4D, 0xCC, 0x9E, 0x0E, 0x43, 0xA0, 0x1E, 0xDF, 0x43, 0x8C, 0xEC,
                0xBE, 0xBE, 0x90, 0xB4, 0x51, 0x54, 0xB9, 0x2F, 0x7B, 0x64, 0x76, 0x4E,
                0x5D, 0xD4, 0x2E, 0xAE, 0xC2, 0x9E, 0xAE, 0x51, 0x43, 0x59, 0xC7, 0x77,
                0x9C, 0x50, 0x3C, 0x0E, 0xED, 0x73, 0x04, 0x5F, 0xF1, 0x4C, 0x76, 0x2A,
                0xD8, 0xF8, 0xCF, 0xFC, 0x34, 0x40, 0xD1, 0xB4, 0x42, 0x61, 0x84, 0x66,
                0x42, 0x39, 0x04, 0xF8, 0x68, 0xB2, 0x62, 0xD7, 0x55, 0xED, 0x1B, 0x74,
                0x75, 0x91, 0xE0, 0xC5, 0x69, 0xC1, 0x31, 0x5C, 0xDB, 0x7B, 0x44, 0x2E,
                0xCE, 0x84, 0x58, 0x0D, 0x1E, 0x66, 0x0C, 0xC8, 0x44, 0x9E, 0xFD, 0x40,
                0x08, 0x67, 0x5D, 0xFB, 0xA7, 0x76, 0x8F, 0x00, 0x11, 0x87, 0xE9, 0x93,
                0xF9, 0x7D, 0xC4, 0xBC, 0x74, 0x55, 0x20, 0xD4, 0x4A, 0x41, 0x2F, 0x43,
                0x42, 0x1A, 0xC1, 0xF2, 0x97, 0x17, 0x49, 0x27, 0x37, 0x6B, 0x2F, 0x88,
                0x7E, 0x1C, 0xA0, 0xA1, 0x89, 0x92, 0x27, 0xD9, 0x56, 0x5A, 0x71, 0xC1,
                0x56, 0x37, 0x7E, 0x3A, 0x9D, 0x05, 0xE7, 0xEE, 0x5D, 0x8F, 0x82, 0x17,
                0xBC, 0xE9, 0xC2, 0x93, 0x30, 0x82, 0xF9, 0xF4, 0xC9, 0xAE, 0x49, 0xDB,
                0xD0, 0x54, 0xB4, 0xD9, 0x75, 0x4D, 0xFA, 0x06, 0xB8, 0xD6, 0x38, 0x41,
                0xB7, 0x1F, 0x77, 0xF3,
            ])), 16),
            g=0x2,
        ),
        name='HAProxy 1.6 builtin DH 2048-bit',
        source='HAProxy source code',
        key_size=2048,
    )
    APPLICATION_SERVER_HAPROXY_VERSION_1_6_BIT_4096 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xDE, 0x16, 0x94, 0xCD, 0x99, 0x58, 0x07, 0xF1, 0xF7, 0x32, 0x96, 0x11,
                0x04, 0x82, 0xD4, 0x84, 0x72, 0x80, 0x99, 0x06, 0xCA, 0xF0, 0xA3, 0x68,
                0x07, 0xCE, 0x64, 0x50, 0xE7, 0x74, 0x45, 0x20, 0x80, 0x5E, 0x4D, 0xAD,
                0xA5, 0xB6, 0xED, 0xFA, 0x80, 0x6C, 0x3B, 0x35, 0xC4, 0x9A, 0x14, 0x6B,
                0x32, 0xBB, 0xFD, 0x1F, 0x17, 0x8E, 0xB7, 0x1F, 0xD6, 0xFA, 0x3F, 0x7B,
                0xEE, 0x16, 0xA5, 0x62, 0x33, 0x0D, 0xED, 0xBC, 0x4E, 0x58, 0xE5, 0x47,
                0x4D, 0xE9, 0xAB, 0x8E, 0x38, 0xD3, 0x6E, 0x90, 0x57, 0xE3, 0x22, 0x15,
                0x33, 0xBD, 0xF6, 0x43, 0x45, 0xB5, 0x10, 0x0A, 0xBE, 0x2C, 0xB4, 0x35,
                0xB8, 0x53, 0x8D, 0xAD, 0xFB, 0xA7, 0x1F, 0x85, 0x58, 0x41, 0x7A, 0x79,
                0x20, 0x68, 0xB3, 0xE1, 0x3D, 0x08, 0x76, 0xBF, 0x86, 0x0D, 0x49, 0xE3,
                0x82, 0x71, 0x8C, 0xB4, 0x8D, 0x81, 0x84, 0xD4, 0xE7, 0xBE, 0x91, 0xDC,
                0x26, 0x39, 0x48, 0x0F, 0x35, 0xC4, 0xCA, 0x65, 0xE3, 0x40, 0x93, 0x52,
                0x76, 0x58, 0x7D, 0xDD, 0x51, 0x75, 0xDC, 0x69, 0x61, 0xBF, 0x47, 0x2C,
                0x16, 0x68, 0x2D, 0xC9, 0x29, 0xD3, 0xE6, 0xC0, 0x99, 0x48, 0xA0, 0x9A,
                0xC8, 0x78, 0xC0, 0x6D, 0x81, 0x67, 0x12, 0x61, 0x3F, 0x71, 0xBA, 0x41,
                0x1F, 0x6C, 0x89, 0x44, 0x03, 0xBA, 0x3B, 0x39, 0x60, 0xAA, 0x28, 0x55,
                0x59, 0xAE, 0xB8, 0xFA, 0xCB, 0x6F, 0xA5, 0x1A, 0xF7, 0x2B, 0xDD, 0x52,
                0x8A, 0x8B, 0xE2, 0x71, 0xA6, 0x5E, 0x7E, 0xD8, 0x2E, 0x18, 0xE0, 0x66,
                0xDF, 0xDD, 0x22, 0x21, 0x99, 0x52, 0x73, 0xA6, 0x33, 0x20, 0x65, 0x0E,
                0x53, 0xE7, 0x6B, 0x9B, 0xC5, 0xA3, 0x2F, 0x97, 0x65, 0x76, 0xD3, 0x47,
                0x23, 0x77, 0x12, 0xB6, 0x11, 0x7B, 0x24, 0xED, 0xF1, 0xEF, 0xC0, 0xE2,
                0xA3, 0x7E, 0x67, 0x05, 0x3E, 0x96, 0x4D, 0x45, 0xC2, 0x18, 0xD1, 0x73,
                0x9E, 0x07, 0xF3, 0x81, 0x6E, 0x52, 0x63, 0xF6, 0x20, 0x76, 0xB9, 0x13,
                0xD2, 0x65, 0x30, 0x18, 0x16, 0x09, 0x16, 0x9E, 0x8F, 0xF1, 0xD2, 0x10,
                0x5A, 0xD3, 0xD4, 0xAF, 0x16, 0x61, 0xDA, 0x55, 0x2E, 0x18, 0x5E, 0x14,
                0x08, 0x54, 0x2E, 0x2A, 0x25, 0xA2, 0x1A, 0x9B, 0x8B, 0x32, 0xA9, 0xFD,
                0xC2, 0x48, 0x96, 0xE1, 0x80, 0xCA, 0xE9, 0x22, 0x17, 0xBB, 0xCE, 0x3E,
                0x9E, 0xED, 0xC7, 0xF1, 0x1F, 0xEC, 0x17, 0x21, 0xDC, 0x7B, 0x82, 0x48,
                0x8E, 0xBB, 0x4B, 0x9D, 0x5B, 0x04, 0x04, 0xDA, 0xDB, 0x39, 0xDF, 0x01,
                0x40, 0xC3, 0xAA, 0x26, 0x23, 0x89, 0x75, 0xC6, 0x0B, 0xD0, 0xA2, 0x60,
                0x6A, 0xF1, 0xCC, 0x65, 0x18, 0x98, 0x1B, 0x52, 0xD2, 0x74, 0x61, 0xCC,
                0xBD, 0x60, 0xAE, 0xA3, 0xA0, 0x66, 0x6A, 0x16, 0x34, 0x92, 0x3F, 0x41,
                0x40, 0x31, 0x29, 0xC0, 0x2C, 0x63, 0xB2, 0x07, 0x8D, 0xEB, 0x94, 0xB8,
                0xE8, 0x47, 0x92, 0x52, 0x93, 0x6A, 0x1B, 0x7E, 0x1A, 0x61, 0xB3, 0x1B,
                0xF0, 0xD6, 0x72, 0x9B, 0xF1, 0xB0, 0xAF, 0xBF, 0x3E, 0x65, 0xEF, 0x23,
                0x1D, 0x6F, 0xFF, 0x70, 0xCD, 0x8A, 0x4C, 0x8A, 0xA0, 0x72, 0x9D, 0xBE,
                0xD4, 0xBB, 0x24, 0x47, 0x4A, 0x68, 0xB5, 0xF5, 0xC6, 0xD5, 0x7A, 0xCD,
                0xCA, 0x06, 0x41, 0x07, 0xAD, 0xC2, 0x1E, 0xE6, 0x54, 0xA7, 0xAD, 0x03,
                0xD9, 0x12, 0xC1, 0x9C, 0x13, 0xB1, 0xC9, 0x0A, 0x43, 0x8E, 0x1E, 0x08,
                0xCE, 0x50, 0x82, 0x73, 0x5F, 0xA7, 0x55, 0x1D, 0xD9, 0x59, 0xAC, 0xB5,
                0xEA, 0x02, 0x7F, 0x6C, 0x5B, 0x74, 0x96, 0x98, 0x67, 0x24, 0xA3, 0x0F,
                0x15, 0xFC, 0xA9, 0x7D, 0x3E, 0x67, 0xD1, 0x70, 0xF8, 0x97, 0xF3, 0x67,
                0xC5, 0x8C, 0x88, 0x44, 0x08, 0x02, 0xC7, 0x2B,
            ])), 16),
            g=0x2,
        ),
        name='HAProxy 1.6 builtin DH 4096-bit',
        source='HAProxy source code',
        key_size=4096,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_2_8_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xC0, 0xC5, 0x23, 0x8D, 0x3A, 0xB3, 0xA3, 0x63, 0x57, 0xC0, 0xD3, 0xFE,
                0xD4, 0xC2, 0x8F, 0x17, 0x0E, 0x7A, 0xDB, 0x8E, 0x3B, 0xB6, 0xA5, 0xC2,
                0x60, 0x7D, 0xE7, 0x03, 0xCC, 0xA3, 0x10, 0xCC, 0x82, 0x39, 0x3C, 0x68,
                0xA0, 0x82, 0x9C, 0x7A, 0x4A, 0x96, 0x8C, 0xB0, 0x1A, 0xB4, 0xB8, 0xA0,
                0x9E, 0x64, 0x9D, 0x40, 0x77, 0x8A, 0x9C, 0x97, 0x96, 0x69, 0x3D, 0xCA,
                0xA8, 0x25, 0xAE, 0xAB,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.2.8 builtin DH 512-bit',
        source='ProFTPD source code',
        key_size=512,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_2_8_BIT_768 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xB3, 0x95, 0x74, 0xCE, 0x0B, 0xFD, 0xAB, 0xC3, 0x53, 0x9B, 0x0B, 0xFD,
                0x6E, 0xB2, 0x64, 0x64, 0x02, 0xDD, 0xFF, 0x2E, 0x77, 0xEB, 0x0D, 0x6C,
                0xCE, 0x04, 0x2C, 0x8E, 0x5A, 0xA7, 0x96, 0x45, 0x54, 0xA6, 0x2F, 0xBC,
                0xF9, 0x77, 0x1C, 0x50, 0x66, 0x8E, 0x48, 0xA8, 0x34, 0xF0, 0x81, 0xDD,
                0x5B, 0x5A, 0xD4, 0xA6, 0x13, 0x89, 0x60, 0x46, 0x05, 0x65, 0x57, 0x2C,
                0x1E, 0x94, 0x57, 0x3C, 0x3E, 0x38, 0xA6, 0xFE, 0x7B, 0x03, 0x7D, 0x16,
                0x46, 0xF6, 0xB3, 0x21, 0x3C, 0x44, 0xF1, 0xF1, 0x90, 0xCE, 0x40, 0x93,
                0x4B, 0xE6, 0xD6, 0x0E, 0x20, 0x85, 0xDA, 0x9B, 0x3F, 0x5C, 0x1F, 0xDB,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.2.8 builtin DH 768-bit',
        source='ProFTPD source code',
        key_size=768,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_2_8_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xC1, 0xD8, 0x9C, 0x90, 0xB1, 0x58, 0x7C, 0xE1, 0x56, 0x70, 0xD7, 0x61,
                0x6C, 0x00, 0xE6, 0xE7, 0x99, 0x04, 0x9F, 0x86, 0xD9, 0xB4, 0x11, 0x09,
                0x23, 0x18, 0xAA, 0x19, 0xCA, 0x49, 0x7C, 0xA8, 0x9D, 0xF7, 0x43, 0x3A,
                0xAF, 0xC3, 0x1F, 0x0E, 0xAE, 0xBB, 0xF2, 0xEA, 0x5B, 0x62, 0xA1, 0x5F,
                0x7C, 0x26, 0xA8, 0xB4, 0x5D, 0x2A, 0x25, 0xAB, 0x88, 0x70, 0x27, 0x06,
                0xD0, 0xF5, 0x01, 0xD9, 0x6A, 0x1F, 0x48, 0x2D, 0x9C, 0xEC, 0xFE, 0xA8,
                0x45, 0x97, 0x1D, 0xC0, 0x8A, 0xFF, 0xE5, 0xE1, 0x79, 0xDF, 0x85, 0x31,
                0xFC, 0x58, 0x91, 0x35, 0xE8, 0xC7, 0xDA, 0x55, 0x7B, 0xAA, 0xDD, 0xC2,
                0x0A, 0x94, 0x34, 0xF7, 0xB4, 0x4A, 0x91, 0x3B, 0x1E, 0x16, 0x89, 0x2A,
                0x04, 0x47, 0x5D, 0xE9, 0x42, 0x47, 0x5E, 0x30, 0x61, 0xE8, 0x42, 0xC1,
                0x23, 0xC7, 0x97, 0x78, 0x63, 0x36, 0x9D, 0x3B,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.2.8 builtin DH 1024-bit',
        source='ProFTPD source code',
        key_size=1024,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_2_8_BIT_1536 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xDA, 0x68, 0x25, 0x7F, 0x9D, 0xB5, 0x3F, 0x42, 0x05, 0xBC, 0x79, 0x65,
                0x6F, 0x19, 0x6A, 0x6F, 0x70, 0x11, 0x91, 0xF2, 0x08, 0x48, 0x2B, 0xE2,
                0x0C, 0x15, 0xD9, 0x31, 0xE7, 0x3A, 0x50, 0x32, 0x9F, 0xFB, 0xD6, 0x56,
                0xFA, 0xB4, 0xA9, 0x5F, 0x22, 0x17, 0x52, 0x72, 0x2C, 0xE3, 0x5D, 0xA1,
                0xA8, 0xEF, 0x16, 0x42, 0x35, 0xC6, 0xD9, 0x64, 0xC1, 0xB3, 0xB3, 0x4C,
                0x09, 0x90, 0xF4, 0x49, 0xEF, 0xDE, 0x64, 0x99, 0xFF, 0x3C, 0x37, 0x0A,
                0x91, 0xA4, 0x9E, 0x38, 0x27, 0xF2, 0x96, 0x13, 0x1E, 0x15, 0xA2, 0x52,
                0xF1, 0x54, 0x0C, 0xED, 0x5C, 0x38, 0xC4, 0xEC, 0xFF, 0xE2, 0xFA, 0x0A,
                0x41, 0xBB, 0x48, 0x5D, 0xD3, 0x54, 0xA1, 0xEB, 0xBD, 0x1F, 0x68, 0xED,
                0x2A, 0x49, 0x7F, 0x68, 0x52, 0xB3, 0xA0, 0x77, 0x3E, 0x19, 0xFB, 0x44,
                0xCD, 0x4B, 0x21, 0x3E, 0x3B, 0xBA, 0xF6, 0xA2, 0x36, 0x37, 0xE5, 0xFA,
                0x95, 0xB0, 0x7D, 0x7B, 0x58, 0x96, 0xC4, 0xC9, 0xC0, 0xCF, 0xD9, 0x3F,
                0xA3, 0x42, 0x0B, 0xD7, 0xBE, 0x1A, 0xA8, 0xB5, 0x57, 0x58, 0xF4, 0x04,
                0x97, 0x54, 0xB0, 0x59, 0x23, 0x5F, 0x98, 0x09, 0x90, 0xC0, 0x49, 0x85,
                0x40, 0x23, 0x2D, 0x21, 0x3E, 0xB0, 0x07, 0x06, 0x07, 0x32, 0xFB, 0xB9,
                0x91, 0x40, 0x92, 0x09, 0xED, 0x07, 0x80, 0x05, 0x14, 0x5B, 0xC1, 0x9B,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.2.8 builtin DH 1536-bit',
        source='ProFTPD source code',
        key_size=1536,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_2_8_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xD0, 0xE6, 0xFF, 0x1F, 0x39, 0xE0, 0xCC, 0x85, 0xAC, 0xA4, 0xE6, 0xDD,
                0x06, 0xE5, 0x2D, 0xBF, 0xEA, 0x64, 0x2E, 0xC7, 0x99, 0x8A, 0x0F, 0xCB,
                0x3C, 0x9D, 0xEE, 0xAC, 0x61, 0xFF, 0x69, 0x31, 0x71, 0xFE, 0x2F, 0x7B,
                0x65, 0x95, 0xA0, 0xA4, 0x59, 0xB8, 0xE3, 0x66, 0x5B, 0x3F, 0xD8, 0x42,
                0x99, 0x4F, 0x09, 0x44, 0xC5, 0x8D, 0x8B, 0x5D, 0x16, 0xAA, 0x05, 0x6E,
                0x8B, 0x11, 0x59, 0x1F, 0xD7, 0x11, 0x84, 0x87, 0x4D, 0xBE, 0xBB, 0xBA,
                0x9A, 0xF0, 0xC3, 0xE2, 0x0E, 0xB8, 0x0F, 0xFD, 0x08, 0xB1, 0x48, 0x98,
                0xDE, 0x89, 0xDA, 0x00, 0x15, 0x04, 0xA4, 0x51, 0xBE, 0x5B, 0x60, 0x0A,
                0x0E, 0x20, 0xAC, 0xC5, 0x83, 0x5D, 0xC4, 0x0F, 0xA3, 0x8E, 0x11, 0x66,
                0x2C, 0xD3, 0x61, 0x5F, 0x16, 0x83, 0xAA, 0xCF, 0x52, 0x9C, 0x7D, 0x75,
                0xEA, 0xCA, 0x67, 0xA3, 0xAB, 0x58, 0x9F, 0x67, 0x17, 0xA0, 0x54, 0x3A,
                0x2B, 0xCA, 0xB5, 0x03, 0x7E, 0x50, 0xBD, 0x99, 0x1E, 0xEF, 0xB2, 0x8F,
                0xB4, 0xFB, 0xD2, 0x2D, 0x6A, 0xA9, 0xA2, 0xC0, 0xD4, 0xD2, 0x68, 0x6C,
                0x21, 0x71, 0x78, 0x75, 0x82, 0x4C, 0xD8, 0xE8, 0x2C, 0x0B, 0xC9, 0x3F,
                0xF6, 0xF0, 0x64, 0xD9, 0x6E, 0x76, 0xCB, 0xBB, 0x99, 0xFB, 0xBC, 0x15,
                0x54, 0x7B, 0x7F, 0x97, 0x36, 0x8F, 0x0B, 0x1C, 0xFF, 0xDD, 0x28, 0x99,
                0xE5, 0x3A, 0xAD, 0xCD, 0x84, 0xAB, 0xA1, 0xEF, 0xB2, 0x21, 0xEA, 0xD6,
                0x49, 0x22, 0x6A, 0x30, 0x6A, 0x63, 0x2E, 0x52, 0x79, 0xCF, 0xBC, 0xC2,
                0xB6, 0x2E, 0xA5, 0x5D, 0xB3, 0xDA, 0xC2, 0xDD, 0x02, 0xEA, 0x26, 0x2F,
                0x3B, 0x0A, 0x12, 0xBB, 0xA2, 0xEF, 0x2B, 0xFA, 0xCC, 0x25, 0x63, 0x1B,
                0xC3, 0x00, 0x18, 0x8F, 0x36, 0xB7, 0x30, 0x5A, 0x55, 0x1A, 0xE0, 0x12,
                0xA1, 0xD2, 0x9C, 0x93,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.2.8 builtin DH 2048-bit',
        source='ProFTPD source code',
        key_size=2048,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_2_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xFE, 0xA8, 0xF1, 0x85, 0x9A, 0x13, 0x69, 0x45, 0x34, 0x64, 0xB5, 0xAC,
                0xBE, 0x67, 0xE5, 0x75, 0x90, 0x61, 0x24, 0x9D, 0x86, 0x5B, 0xC6, 0x1E,
                0xB3, 0x92, 0xD0, 0x16, 0x8E, 0xA7, 0x9E, 0x58, 0x91, 0x8E, 0x33, 0x06,
                0xC4, 0xEC, 0x45, 0x6E, 0x01, 0x65, 0xB4, 0x23, 0xEA, 0x35, 0x32, 0x40,
                0x83, 0x92, 0x0E, 0x8C, 0xB4, 0xED, 0xCD, 0x14, 0xB8, 0xAC, 0x32, 0x1F,
                0x4D, 0x25, 0x58, 0xEB,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.2 builtin DH 512-bit',
        source='ProFTPD source code',
        key_size=512,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_2_BIT_768 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xFC, 0xE8, 0xB1, 0x99, 0x7D, 0x2D, 0x4D, 0x36, 0x43, 0x2D, 0xBB, 0x8B,
                0xBE, 0xD5, 0x08, 0x95, 0xDF, 0x79, 0xA1, 0x8E, 0xDA, 0xC1, 0x96, 0x3B,
                0xFE, 0xDD, 0x3B, 0x68, 0x4C, 0xC2, 0xEE, 0x95, 0x68, 0x08, 0x53, 0x3D,
                0x2A, 0xC5, 0x87, 0x45, 0xB6, 0x2B, 0x02, 0x22, 0xC7, 0x3F, 0xDB, 0xD5,
                0x8F, 0x38, 0x19, 0xF8, 0x9B, 0xC8, 0x71, 0x8F, 0x9E, 0xF1, 0xE0, 0x38,
                0xE4, 0x29, 0x87, 0x98, 0x9C, 0x0D, 0xA9, 0xA3, 0x11, 0xF1, 0x3C, 0x5F,
                0xDE, 0x41, 0x90, 0xB6, 0x01, 0x47, 0xB3, 0x3D, 0x1A, 0xE1, 0x93, 0x56,
                0x52, 0x27, 0x3F, 0x37, 0xDF, 0xB0, 0xC0, 0xBE, 0xAE, 0xA9, 0xBF, 0x63,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.2 builtin DH 768-bit',
        source='ProFTPD source code',
        key_size=768,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_2_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xCD, 0xF8, 0x74, 0xA8, 0xBA, 0x04, 0xFD, 0xBB, 0x80, 0x6F, 0x43, 0x38,
                0x2B, 0x93, 0x07, 0xA5, 0x1E, 0xF2, 0xE2, 0xD8, 0xDA, 0xDE, 0x0A, 0xF2,
                0x57, 0xB4, 0xC3, 0x5C, 0x88, 0x6B, 0xB6, 0xB9, 0xF2, 0xF0, 0x27, 0x0E,
                0xAD, 0x42, 0x47, 0x7B, 0x25, 0x30, 0x87, 0x30, 0x2B, 0x84, 0x73, 0xDA,
                0x9B, 0xFB, 0x33, 0x2A, 0xC8, 0x83, 0xD1, 0xDA, 0x7F, 0x99, 0x78, 0x91,
                0x43, 0x31, 0xE3, 0x0A, 0xF4, 0x39, 0x1C, 0x42, 0x05, 0xEB, 0x05, 0x2E,
                0xA1, 0x4F, 0x54, 0x18, 0xDB, 0x2F, 0xEC, 0x01, 0xF2, 0x67, 0xC9, 0x99,
                0x80, 0xBD, 0xCE, 0xAF, 0x35, 0xD3, 0x6A, 0xCB, 0x52, 0x07, 0xC3, 0xC0,
                0x75, 0x48, 0xD1, 0xD5, 0xBD, 0x93, 0x06, 0x4F, 0x4E, 0x24, 0x09, 0xD1,
                0x05, 0xCF, 0x23, 0x73, 0xA2, 0x60, 0x8C, 0x82, 0x47, 0xCB, 0xEF, 0x79,
                0xB5, 0x48, 0xFC, 0xA8, 0xDB, 0xE4, 0x87, 0x2F,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.2 builtin DH 1024-bit',
        source='ProFTPD source code',
        key_size=1024,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_2_BIT_1536 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xD8, 0xF5, 0x0C, 0x0A, 0x3E, 0xF7, 0x93, 0x3D, 0x07, 0xC5, 0x7B, 0xA5,
                0x2D, 0xE4, 0xF1, 0x44, 0x4E, 0xCF, 0xE8, 0x2E, 0xD8, 0x7B, 0xAE, 0xBD,
                0xED, 0x0F, 0x82, 0x55, 0xE5, 0x12, 0xD4, 0xDF, 0x4A, 0xBD, 0xCA, 0x17,
                0xA8, 0x1A, 0xDC, 0x45, 0xAC, 0xDB, 0x68, 0xFD, 0xEC, 0x82, 0x53, 0x92,
                0x8C, 0x6E, 0xD1, 0x0B, 0x30, 0x46, 0x34, 0x41, 0xAF, 0xAE, 0x0A, 0x7E,
                0x4E, 0x29, 0x31, 0x3A, 0x57, 0xF3, 0x6E, 0xE8, 0x26, 0x83, 0xDC, 0xF6,
                0x7E, 0xB7, 0xC5, 0x5A, 0x52, 0xE3, 0xB7, 0x29, 0x83, 0xFD, 0x96, 0xF1,
                0x9C, 0x84, 0xF7, 0xF6, 0x4A, 0x96, 0x00, 0x01, 0x33, 0x6C, 0xF4, 0x35,
                0xAB, 0x0E, 0x5C, 0x13, 0x1A, 0x6A, 0xED, 0xFC, 0x53, 0xC7, 0x04, 0x79,
                0xB1, 0xF0, 0x9A, 0xB0, 0xA2, 0xDE, 0xB4, 0x89, 0xC4, 0x1A, 0x70, 0xC9,
                0x4F, 0xBB, 0x5F, 0x84, 0x04, 0x6B, 0x7A, 0x48, 0xFD, 0x61, 0xA6, 0x97,
                0x73, 0x53, 0xCE, 0x64, 0x68, 0x1B, 0xDE, 0x4D, 0x00, 0x56, 0x49, 0x70,
                0x52, 0xF3, 0x15, 0x15, 0xF6, 0x55, 0x57, 0xF9, 0x60, 0x1E, 0x08, 0xE2,
                0xC5, 0x56, 0x0A, 0x94, 0x6A, 0x54, 0x52, 0xF6, 0x1D, 0x70, 0x7D, 0x8A,
                0x86, 0xAE, 0x43, 0x9D, 0x03, 0x05, 0x80, 0x23, 0xA7, 0xBD, 0xA1, 0xD7,
                0xCD, 0x9A, 0x0A, 0x05, 0x94, 0x59, 0x1F, 0xB8, 0xE0, 0x1F, 0x3C, 0x6B,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.2 builtin DH 1536-bit',
        source='ProFTPD source code',
        key_size=1536,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_2_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xD0, 0xE6, 0xFF, 0x1F, 0x39, 0xE0, 0xCC, 0x85, 0xAC, 0xA4, 0xE6, 0xDD,
                0x06, 0xE5, 0x2D, 0xBF, 0xEA, 0x64, 0x2E, 0xC7, 0x99, 0x8A, 0x0F, 0xCB,
                0x3C, 0x9D, 0xEE, 0xAC, 0x61, 0xFF, 0x69, 0x31, 0x71, 0xFE, 0x2F, 0x7B,
                0x65, 0x95, 0xA0, 0xA4, 0x59, 0xB8, 0xE3, 0x66, 0x5B, 0x3F, 0xD8, 0x42,
                0x99, 0x4F, 0x09, 0x44, 0xC5, 0x8D, 0x8B, 0x5D, 0x16, 0xAA, 0x05, 0x6E,
                0x8B, 0x11, 0x59, 0x1F, 0xD7, 0x11, 0x84, 0x87, 0x4D, 0xBE, 0xBB, 0xBA,
                0x9A, 0xF0, 0xC3, 0xE2, 0x0E, 0xB8, 0x0F, 0xFD, 0x08, 0xB1, 0x48, 0x98,
                0xDE, 0x89, 0xDA, 0x00, 0x15, 0x04, 0xA4, 0x51, 0xBE, 0x5B, 0x60, 0x0A,
                0x0E, 0x20, 0xAC, 0xC5, 0x83, 0x5D, 0xC4, 0x0F, 0xA3, 0x8E, 0x11, 0x66,
                0x2C, 0xD3, 0x61, 0x5F, 0x16, 0x83, 0xAA, 0xCF, 0x52, 0x9C, 0x7D, 0x75,
                0xEA, 0xCA, 0x67, 0xA3, 0xAB, 0x58, 0x9F, 0x67, 0x17, 0xA0, 0x54, 0x3A,
                0x2B, 0xCA, 0xB5, 0x03, 0x7E, 0x50, 0xBD, 0x99, 0x1E, 0xEF, 0xB2, 0x8F,
                0xB4, 0xFB, 0xD2, 0x2D, 0x6A, 0xA9, 0xA2, 0xC0, 0xD4, 0xD2, 0x68, 0x6C,
                0x21, 0x71, 0x78, 0x75, 0x82, 0x4C, 0xD8, 0xE8, 0x2C, 0x0B, 0xC9, 0x3F,
                0xF6, 0xF0, 0x64, 0xD9, 0x6E, 0x76, 0xCB, 0xBB, 0x99, 0xFB, 0xBC, 0x15,
                0x54, 0x7B, 0x7F, 0x97, 0x36, 0x8F, 0x0B, 0x1C, 0xFF, 0xDD, 0x28, 0x99,
                0xE5, 0x3A, 0xAD, 0xCD, 0x84, 0xAB, 0xA1, 0xEF, 0xB2, 0x21, 0xEA, 0xD6,
                0x49, 0x22, 0x6A, 0x30, 0x6A, 0x63, 0x2E, 0x52, 0x79, 0xCF, 0xBC, 0xC2,
                0xB6, 0x2E, 0xA5, 0x5D, 0xB3, 0xDA, 0xC2, 0xDD, 0x02, 0xEA, 0x26, 0x2F,
                0x3B, 0x0A, 0x12, 0xBB, 0xA2, 0xEF, 0x2B, 0xFA, 0xCC, 0x25, 0x63, 0x1B,
                0xC3, 0x00, 0x18, 0x8F, 0x36, 0xB7, 0x30, 0x5A, 0x55, 0x1A, 0xE0, 0x12,
                0xA1, 0xD2, 0x9C, 0x93,
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.2 builtin DH 2048-bit',
        source='ProFTPD source code',
        key_size=2048,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_5_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xBA, 0x55, 0xC0, 0x7C, 0xF9, 0x61, 0x5E, 0x17, 0x3F, 0xC7, 0x42, 0x79,
                0x3F, 0xBD, 0x7A, 0xDE, 0xA3, 0x3C, 0x5D, 0xA6, 0x93, 0x41, 0x63, 0x88,
                0x0D, 0xF2, 0xB7, 0x73, 0x8A, 0xD8, 0xD3, 0x0E, 0x9A, 0x4F, 0x06, 0xCC,
                0x33, 0x53, 0x86, 0x4B, 0xFE, 0x10, 0x52, 0x7B, 0x50, 0xAB, 0x9A, 0xEE,
                0x2E, 0x4E, 0xDA, 0x4F, 0x37, 0x15, 0x55, 0x03, 0xE8, 0x37, 0x17, 0x20,
                0x7F, 0x19, 0xF5, 0x13,
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.5 builtin DH 512-bit',
        source='ProFTPD source code',
        key_size=512,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_5_BIT_768 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xE1, 0x12, 0x29, 0xEC, 0x71, 0x06, 0x6E, 0xB8, 0x63, 0x26, 0x9B, 0x3A,
                0x18, 0x2E, 0xE3, 0x47, 0x6C, 0x0F, 0x2B, 0x66, 0x60, 0xE2, 0x95, 0x98,
                0xC1, 0xF1, 0x16, 0xAC, 0x18, 0x9D, 0x4C, 0xA3, 0xC9, 0x27, 0x9F, 0xDB,
                0x45, 0x2E, 0xD4, 0x46, 0x1D, 0x5C, 0x70, 0x23, 0x15, 0x1A, 0xC6, 0x44,
                0x20, 0x7A, 0xA0, 0x32, 0xD8, 0x58, 0xD0, 0x17, 0x3D, 0x99, 0xF6, 0x15,
                0x37, 0x6B, 0x57, 0x42, 0x81, 0xBD, 0xD5, 0x12, 0x04, 0x4F, 0x0D, 0x7A,
                0x8C, 0x49, 0x6F, 0x2D, 0xE1, 0x4B, 0x15, 0xAC, 0x73, 0x7F, 0x00, 0xCA,
                0xAC, 0xCC, 0x80, 0xFF, 0x3D, 0x96, 0xFE, 0x55, 0x3A, 0x7E, 0xF6, 0x8B,
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.5 builtin DH 768-bit',
        source='ProFTPD source code',
        key_size=768,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_5_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xF2, 0xD0, 0x63, 0xDA, 0x3B, 0xA3, 0xAC, 0x03, 0x01, 0x43, 0x96, 0xE0,
                0xE6, 0x2A, 0xF8, 0x2A, 0x7D, 0x8F, 0x47, 0x27, 0x37, 0x6A, 0xA0, 0x91,
                0xD0, 0x83, 0x41, 0x33, 0x07, 0x1D, 0xDA, 0xA8, 0xB5, 0xB1, 0x7B, 0x4E,
                0x26, 0x2F, 0xDE, 0x2B, 0x8F, 0x6B, 0xA4, 0x2E, 0xD5, 0x6C, 0x0D, 0xC9,
                0x5A, 0x1A, 0xF6, 0x4E, 0xEF, 0xCB, 0x37, 0xD6, 0xED, 0x9C, 0x6F, 0x2C,
                0xB0, 0xA1, 0x50, 0x1B, 0xD3, 0x15, 0x9D, 0x60, 0x04, 0x02, 0xA5, 0x56,
                0x9B, 0xE1, 0xAB, 0xF5, 0xE6, 0x58, 0x72, 0xF0, 0x5D, 0x8E, 0x10, 0xFD,
                0xAB, 0x82, 0xAC, 0x78, 0xD1, 0x8F, 0xA5, 0x4D, 0x0B, 0x70, 0xFA, 0xB0,
                0x3E, 0xBC, 0xBE, 0x23, 0xB4, 0x0A, 0xA7, 0xFC, 0xC9, 0x68, 0xC1, 0x1B,
                0x07, 0x62, 0x5E, 0x45, 0xBA, 0xB4, 0xC3, 0x6E, 0xCF, 0x58, 0x8F, 0x4B,
                0x8F, 0xCA, 0x64, 0x3D, 0x3D, 0x40, 0x9A, 0xC3,
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.5 builtin DH 1024-bit',
        source='ProFTPD source code',
        key_size=1024,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_5_BIT_1536 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x94, 0xAB, 0x27, 0xAE, 0x97, 0xF4, 0x7A, 0x42, 0x45, 0x15, 0x12, 0xB8,
                0xE0, 0xD1, 0x22, 0x19, 0x10, 0x08, 0x58, 0x89, 0x6C, 0xDB, 0x61, 0x45,
                0x97, 0x25, 0xAA, 0xD5, 0x51, 0xA8, 0x9C, 0x48, 0x53, 0xAA, 0xE9, 0x22,
                0x44, 0x43, 0xD4, 0xBF, 0xC0, 0x94, 0xF9, 0x63, 0x6B, 0x79, 0x92, 0x36,
                0x25, 0x70, 0x9F, 0x7E, 0xE8, 0x38, 0x73, 0xF9, 0x96, 0xE8, 0xE9, 0xED,
                0xEE, 0xA6, 0x2E, 0x40, 0xA3, 0xFB, 0x54, 0x12, 0xB9, 0x2B, 0x59, 0x80,
                0x38, 0x38, 0x30, 0xC1, 0x59, 0x2B, 0x4B, 0xC4, 0xCA, 0x77, 0x82, 0x55,
                0x96, 0xBF, 0xE0, 0x7C, 0xCD, 0xB4, 0x26, 0x7C, 0x99, 0xD4, 0xDC, 0x05,
                0x4F, 0xC7, 0x54, 0xE8, 0x64, 0x90, 0x57, 0x24, 0x24, 0x1C, 0xD7, 0xE8,
                0xB5, 0x53, 0x77, 0x50, 0xC3, 0xAC, 0xD3, 0xAF, 0x76, 0xEE, 0x63, 0xFB,
                0x32, 0x9B, 0x32, 0x58, 0x33, 0x9B, 0x3F, 0xBF, 0x61, 0x11, 0xE5, 0x3E,
                0x51, 0x15, 0xAF, 0x34, 0x9C, 0x26, 0x9D, 0xC2, 0x33, 0xA6, 0x0B, 0xC4,
                0x76, 0xD3, 0x6B, 0x43, 0x57, 0x22, 0x39, 0x73, 0x1D, 0x68, 0xD0, 0x12,
                0xD3, 0x30, 0xE9, 0x40, 0xEC, 0xAC, 0x32, 0x4B, 0x0E, 0x75, 0x3C, 0x74,
                0xC6, 0xCC, 0x49, 0x0A, 0x2B, 0x4D, 0x3A, 0x41, 0x63, 0xF3, 0xBF, 0x79,
                0xE5, 0xDE, 0x03, 0x4E, 0x71, 0xE5, 0xC5, 0xC0, 0xB6, 0x93, 0x4E, 0x33,
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.5 builtin DH 1536-bit',
        source='ProFTPD source code',
        key_size=1536,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_5_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xF2, 0xEA, 0x0A, 0x01, 0x2B, 0xB9, 0x67, 0xDB, 0x1D, 0x15, 0x57, 0x44,
                0xBE, 0x94, 0x0E, 0x85, 0x9B, 0xDB, 0xA4, 0x74, 0xFB, 0x6B, 0xE6, 0x44,
                0x2A, 0xB5, 0x2E, 0xF8, 0x54, 0x67, 0x03, 0xDB, 0xF3, 0x2B, 0x7B, 0x86,
                0x9F, 0xA8, 0x24, 0x1B, 0x0A, 0xCB, 0x13, 0xFC, 0x1C, 0x59, 0xCC, 0x5C,
                0x2C, 0xEE, 0x7A, 0x98, 0x06, 0x3D, 0xD6, 0x48, 0xA8, 0xAD, 0xD2, 0x87,
                0x65, 0x84, 0xD6, 0xF0, 0xA6, 0x2A, 0xEB, 0x8D, 0x7A, 0x6C, 0x0D, 0xC9,
                0xAC, 0xEB, 0x41, 0xC2, 0x26, 0x6F, 0x79, 0x20, 0x17, 0x1B, 0xAA, 0x5A,
                0xF9, 0x24, 0xA4, 0x83, 0x70, 0xE7, 0xEA, 0x22, 0xB6, 0xAC, 0xC6, 0x9D,
                0xA3, 0xCB, 0x36, 0xCB, 0x53, 0x13, 0x51, 0x84, 0x03, 0x43, 0xC2, 0xEC,
                0xAA, 0x76, 0x0E, 0xAC, 0x7B, 0xF9, 0xE7, 0x57, 0xCF, 0xD2, 0x43, 0x2A,
                0xEE, 0xFF, 0x5B, 0x57, 0x4A, 0xEB, 0xF7, 0x46, 0xC5, 0xE7, 0x83, 0xF9,
                0xE1, 0x11, 0x5D, 0x54, 0xA3, 0x31, 0xF3, 0x6A, 0xFB, 0xEA, 0x7E, 0x60,
                0x12, 0xDB, 0x15, 0x36, 0xC5, 0x4A, 0x6D, 0x36, 0x9B, 0xA1, 0xBD, 0xF0,
                0x65, 0x58, 0xDD, 0x08, 0x22, 0x25, 0x49, 0x5A, 0x6E, 0x98, 0x66, 0x16,
                0x25, 0x76, 0xEE, 0xDB, 0x31, 0x4F, 0x17, 0x4D, 0xED, 0x69, 0x23, 0xFC,
                0xCC, 0x31, 0xAB, 0x67, 0xD8, 0xC2, 0x55, 0x8F, 0x9C, 0x12, 0x85, 0x38,
                0xCF, 0x58, 0x6B, 0x5A, 0x01, 0xD3, 0xB6, 0x8B, 0xDF, 0x86, 0x85, 0xBC,
                0x8B, 0x55, 0x0B, 0x36, 0xB1, 0x9F, 0x38, 0xE7, 0x1D, 0x33, 0x31, 0xA1,
                0x2B, 0xF5, 0x6D, 0xB8, 0x85, 0x3A, 0x44, 0xC2, 0xAA, 0x7C, 0x2E, 0x8E,
                0x86, 0x66, 0x4B, 0x31, 0xDF, 0xDF, 0x6B, 0x72, 0x29, 0xE6, 0x3A, 0x06,
                0x45, 0x61, 0xA7, 0x97, 0x6A, 0x04, 0x40, 0x42, 0xB6, 0xF4, 0x04, 0x49,
                0xC4, 0x6E, 0xD4, 0x03,
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.5 builtin DH 2048-bit',
        source='ProFTPD source code',
        key_size=2048,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_7_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x8B, 0xFB, 0x35, 0x64, 0xC4, 0xFC, 0x41, 0x02, 0x14, 0xD3,
                0x6F, 0xE7, 0xF2, 0xED, 0x61, 0xE6, 0x26, 0xAB, 0x8B, 0xBE,
                0xE4, 0x22, 0xEB, 0x8C, 0x7E, 0xF9, 0x3F, 0x86, 0xC1, 0x6C,
                0x85, 0xFB, 0x17, 0x71, 0xF6, 0xEB, 0x95, 0x24, 0xC4, 0xCC,
                0xE0, 0x24, 0xFA, 0x98, 0xD9, 0x8E, 0x53, 0x35, 0x60, 0x0E,
                0x0A, 0x85, 0xE0, 0xC3, 0xAC, 0x74, 0xCF, 0xE5, 0x04, 0x1A,
                0x46, 0x21, 0xFE, 0x93
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.7 builtin DH 512-bit',
        source='ProFTPD source code',
        key_size=512,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_7_BIT_768 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xE7, 0x63, 0x09, 0x19, 0xE0, 0x4D, 0xA1, 0xE1, 0xF1, 0xE0,
                0x17, 0x66, 0xCF, 0x5E, 0x22, 0x09, 0x37, 0xAE, 0x3A, 0x77,
                0x15, 0x02, 0x92, 0xB9, 0x68, 0xEE, 0x2A, 0x97, 0x64, 0xE4,
                0x18, 0x9A, 0xFE, 0xA1, 0x3E, 0xF2, 0x8E, 0x67, 0x85, 0x10,
                0x9C, 0x02, 0xA4, 0x70, 0x27, 0x5C, 0x76, 0x0E, 0x24, 0xE5,
                0x73, 0x89, 0x07, 0x4B, 0x48, 0x32, 0xC1, 0x21, 0xA1, 0x2E,
                0x78, 0xD7, 0x9E, 0xCA, 0x79, 0x04, 0xB2, 0x45, 0x3B, 0xFE,
                0xE5, 0xD5, 0x82, 0xA2, 0x81, 0xFF, 0x05, 0x44, 0x60, 0x34,
                0xC3, 0x8F, 0xC0, 0x1B, 0x04, 0xC2, 0xC3, 0xB4, 0xA0, 0xED,
                0x68, 0x3D, 0xA0, 0x05, 0xCB, 0xCB
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.7 builtin DH 768-bit',
        source='ProFTPD source code',
        key_size=768,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_7_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x95, 0x7F, 0xBD, 0x24, 0x3F, 0x81, 0x1D, 0xEC, 0xC5, 0xC1,
                0xD9, 0x8E, 0xB8, 0xE1, 0xDB, 0x52, 0x82, 0xBF, 0x3A, 0x64,
                0xCF, 0xCE, 0xC1, 0xA9, 0x17, 0xEC, 0x16, 0xE8, 0x49, 0x42,
                0x5D, 0x7B, 0xE4, 0x7F, 0x55, 0x4E, 0xA6, 0xCB, 0xA4, 0x02,
                0xBE, 0xB9, 0x8A, 0xCB, 0x55, 0xC0, 0x69, 0x74, 0xC0, 0x38,
                0xCD, 0x65, 0x73, 0xAF, 0x5B, 0xE0, 0x62, 0x1A, 0x05, 0xCE,
                0xEC, 0x96, 0x93, 0x58, 0x95, 0x70, 0x9F, 0x77, 0xA3, 0x93,
                0x73, 0x6B, 0xAC, 0x0D, 0x35, 0xE5, 0xD3, 0x6B, 0xFE, 0x61,
                0x30, 0xD0, 0xA4, 0x8C, 0x80, 0x2D, 0xA6, 0xBD, 0x1E, 0xC9,
                0xAA, 0xD1, 0x5E, 0xC2, 0x24, 0x49, 0x68, 0x39, 0x7C, 0x70,
                0xAC, 0x4C, 0x38, 0x00, 0x9C, 0x04, 0x66, 0x74, 0xDC, 0x37,
                0xFC, 0x0A, 0x20, 0xC3, 0x82, 0x63, 0x38, 0xDC, 0x51, 0xB5,
                0x59, 0xB8, 0x05, 0xC0, 0xDF, 0x1F, 0x20, 0x63
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.7 builtin DH 1024-bit',
        source='ProFTPD source code',
        key_size=1024,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_7_BIT_1536 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xFF, 0x88, 0x9F, 0x3A, 0x0F, 0x13, 0xF1, 0xD4, 0x79, 0xF1,
                0x3A, 0x7F, 0x7F, 0x0E, 0x8D, 0xA0, 0x06, 0xE3, 0x4B, 0x32,
                0xF7, 0xB3, 0xFB, 0x77, 0xA1, 0xDA, 0xF5, 0x65, 0x50, 0xA1,
                0x8F, 0x86, 0xFD, 0xDA, 0x63, 0xBA, 0xE3, 0x97, 0x5C, 0x09,
                0xB4, 0x06, 0x27, 0x51, 0x3A, 0xC1, 0x3B, 0x3E, 0xDF, 0x95,
                0x64, 0xA3, 0x59, 0x17, 0x75, 0xF2, 0xE5, 0x0C, 0x3A, 0x0E,
                0xF6, 0xE5, 0xC3, 0x03, 0x72, 0x91, 0xFD, 0x7F, 0x9D, 0xD6,
                0x49, 0x3B, 0xF2, 0x04, 0x4C, 0x9F, 0x9A, 0x7D, 0x03, 0x22,
                0x2C, 0xAA, 0x7A, 0x97, 0xF1, 0x43, 0xAB, 0x7A, 0xA7, 0xC4,
                0x30, 0x8B, 0xF3, 0x12, 0x40, 0xFC, 0xF8, 0xCE, 0xF5, 0xDD,
                0xC3, 0x48, 0x16, 0x61, 0xCC, 0x12, 0x4F, 0x29, 0xFF, 0xB6,
                0x53, 0xA0, 0x76, 0x57, 0xA5, 0x35, 0x96, 0x35, 0xE0, 0x6A,
                0x48, 0x51, 0xB4, 0xE9, 0xF0, 0x2F, 0xAB, 0x91, 0x53, 0x5A,
                0xCA, 0xAD, 0xE1, 0xD9, 0xBF, 0xB7, 0x01, 0xD1, 0x66, 0xD0,
                0x00, 0x9A, 0x49, 0xFA, 0x9C, 0x38, 0xF9, 0xAB, 0x01, 0x53,
                0x89, 0x49, 0x54, 0x06, 0xBA, 0x99, 0xF5, 0xA6, 0x44, 0x61,
                0xF1, 0xCA, 0xA7, 0x2F, 0x5C, 0xA0, 0x5E, 0x9B, 0x86, 0x65,
                0xC4, 0xF3, 0x13, 0x8E, 0xC5, 0x77, 0x62, 0x79, 0x1E, 0xCB,
                0xF1, 0x5E, 0xE8, 0x1C, 0x80, 0x23, 0xA7, 0xBA, 0x13, 0xFE,
                0x37, 0x8B
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.7 builtin DH 1536-bit',
        source='ProFTPD source code',
        key_size=1536,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_7_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xEA, 0xB7, 0x8A, 0x79, 0xFE, 0x66, 0xCD, 0xB3, 0x0C, 0xE9,
                0x28, 0xDE, 0x35, 0x1A, 0x59, 0xD6, 0x8A, 0xF5, 0x03, 0x70,
                0xD8, 0x91, 0xEB, 0x2C, 0xDA, 0x74, 0x8F, 0xB5, 0xE4, 0xD4,
                0xE2, 0xE1, 0x6E, 0x0C, 0x82, 0xF7, 0x98, 0xFA, 0x49, 0x1D,
                0xF7, 0xC5, 0x96, 0xB6, 0x2E, 0xAD, 0x26, 0xFA, 0x61, 0xB2,
                0xB8, 0x7C, 0xD5, 0x94, 0x64, 0x97, 0x7F, 0xFC, 0x23, 0x04,
                0xA4, 0xE6, 0x50, 0x50, 0x4D, 0xC2, 0xD4, 0xA2, 0xC4, 0x74,
                0x7A, 0xC1, 0x9D, 0x6F, 0x12, 0xBE, 0x0B, 0xEE, 0x03, 0xFB,
                0x6C, 0xE2, 0x3F, 0x8B, 0x68, 0x32, 0xF6, 0xD0, 0x67, 0xA0,
                0x00, 0xE6, 0x3D, 0xD1, 0xDD, 0xC5, 0x81, 0x8B, 0x4F, 0xF0,
                0xD2, 0x81, 0x68, 0x15, 0x45, 0xFB, 0x9C, 0x91, 0x98, 0x1F,
                0xE1, 0xE1, 0x0A, 0xAE, 0x5D, 0xCB, 0x4D, 0x75, 0x1E, 0xBE,
                0x99, 0xE8, 0x2C, 0xD4, 0x79, 0xC5, 0xA1, 0x31, 0x28, 0x56,
                0xF6, 0x51, 0xEC, 0x49, 0x0D, 0xDF, 0xA0, 0xB9, 0x8F, 0x69,
                0x9E, 0xD2, 0xF4, 0x37, 0x13, 0xBE, 0xE6, 0xBC, 0x01, 0xED,
                0x16, 0x79, 0xC1, 0xE2, 0x7A, 0xD8, 0x7F, 0xAA, 0x2D, 0x8F,
                0x60, 0xCE, 0xF3, 0x5A, 0xED, 0xD9, 0x07, 0x9E, 0x28, 0x4B,
                0x5F, 0x3B, 0x5A, 0xDD, 0xFD, 0xF9, 0xAA, 0x94, 0xDD, 0x1A,
                0x47, 0x57, 0x34, 0x39, 0x40, 0x2B, 0x15, 0x79, 0xA3, 0x14,
                0xAC, 0x22, 0x73, 0xD5, 0x09, 0x7E, 0x9E, 0xA6, 0xA4, 0xF1,
                0x3E, 0xC9, 0x2B, 0x28, 0xE8, 0x41, 0x8D, 0xAA, 0xCB, 0x3E,
                0x16, 0x2A, 0x69, 0xA3, 0xE0, 0xA8, 0x64, 0x24, 0x95, 0x04,
                0xF1, 0xBD, 0xE4, 0x43, 0xDF, 0xDC, 0x9F, 0x71, 0x47, 0x8F,
                0xE0, 0xA6, 0x3B, 0x05, 0xF8, 0xD1, 0xC3, 0x4E, 0x5B, 0x3F,
                0x87, 0x34, 0x24, 0xAB, 0xBF, 0xF5, 0xD0, 0xD2, 0xC1, 0xEA,
                0x65, 0x38, 0x5B, 0x03, 0x15, 0x57
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.2 builtin DH 2048-bit',
        source='ProFTPD source code',
        key_size=2048,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_8_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xFE, 0x72, 0x7D, 0xBE, 0xF4, 0x71, 0x6C, 0xC2, 0x44, 0x3A, 0x9C, 0x32,
                0x44, 0xFB, 0xE7, 0xEB, 0x2C, 0x6C, 0x5F, 0x20, 0x23, 0x5A, 0xAD, 0xFC,
                0xD7, 0xB6, 0x5A, 0xBF, 0x2B, 0x87, 0x5B, 0xA7, 0x6A, 0xEA, 0x48, 0x01,
                0x08, 0x2F, 0x61, 0x33, 0x72, 0xC2, 0x99, 0x5A, 0xCA, 0xA3, 0x39, 0x9D,
                0x62, 0xC5, 0xCC, 0xAA, 0xD1, 0x39, 0x91, 0x7E, 0xDF, 0x45, 0x02, 0x45,
                0x2E, 0x59, 0x8C, 0x47
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.8 builtin DH 512-bit',
        source='ProFTPD source code',
        key_size=512,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_8_BIT_768 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x91, 0x9A, 0x5F, 0x11, 0x73, 0xF0, 0xF1, 0xBD, 0x30, 0x3E, 0x3D, 0x36,
                0x8A, 0x1F, 0x98, 0x3A, 0x54, 0x96, 0x2A, 0xCB, 0x0E, 0x5B, 0x1E, 0xF5,
                0x7E, 0xB6, 0x7B, 0x93, 0xBD, 0xE5, 0x65, 0x75, 0xFB, 0x9B, 0xA2, 0x20,
                0x56, 0xA5, 0x9A, 0x5A, 0xC0, 0x4B, 0x5F, 0xC3, 0x69, 0x60, 0x15, 0x27,
                0xEB, 0x1B, 0xC4, 0xBA, 0x56, 0x85, 0x8B, 0x43, 0x6B, 0xE1, 0xF3, 0x1E,
                0x9C, 0x00, 0xCC, 0x3D, 0xA2, 0x24, 0x8A, 0x22, 0xAF, 0x5D, 0x2E, 0x42,
                0x2B, 0x3A, 0x42, 0x92, 0xC7, 0x6C, 0x6A, 0x73, 0x9D, 0xB5, 0x57, 0xA3,
                0x49, 0x66, 0x78, 0xAD, 0x39, 0x72, 0xB7, 0x6A, 0xBB, 0x19, 0x0B, 0x0B
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.8 builtin DH 768-bit',
        source='ProFTPD source code',
        key_size=768,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_8_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xBE, 0x9B, 0x2F, 0x17, 0xAC, 0x19, 0x98, 0xB1, 0x63, 0xDF, 0xDE, 0xFB,
                0x23, 0xBA, 0x62, 0x16, 0x19, 0xAF, 0xDB, 0x4F, 0xCC, 0x80, 0x90, 0x07,
                0x83, 0x67, 0xC9, 0xA4, 0xF2, 0x19, 0x7F, 0xA8, 0x57, 0xBB, 0xBE, 0x86,
                0x24, 0x3F, 0x73, 0x4B, 0xEE, 0x6F, 0x6C, 0x22, 0x4B, 0xCE, 0x7D, 0xBB,
                0xBE, 0xFE, 0xA1, 0xBA, 0xC1, 0xE1, 0x42, 0x43, 0xEC, 0xAE, 0x70, 0x0F,
                0xF6, 0x59, 0x2D, 0x17, 0x88, 0x4D, 0xB4, 0xE5, 0x3B, 0xA7, 0x6F, 0x1B,
                0x2C, 0xF0, 0x02, 0xC9, 0x57, 0xDD, 0x63, 0xB5, 0x22, 0x9A, 0x02, 0xA6,
                0xB1, 0xDB, 0xF4, 0xA2, 0x7D, 0xF1, 0x8F, 0x6A, 0x49, 0x90, 0xE9, 0x67,
                0xD8, 0x0C, 0x5D, 0xC8, 0xFE, 0xC1, 0x23, 0x72, 0xCD, 0xE4, 0xEA, 0xAD,
                0x0B, 0xCE, 0x68, 0x51, 0xFB, 0x57, 0x35, 0xCD, 0xDB, 0xE3, 0xE8, 0x9D,
                0x7F, 0xD7, 0xEE, 0x64, 0xFB, 0xA9, 0xA9, 0xDB
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.8 builtin DH 1024-bit',
        source='ProFTPD source code',
        key_size=1024,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_8_BIT_1536 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x89, 0x55, 0xC2, 0x99, 0xCC, 0x56, 0xB0, 0x29, 0x22, 0xB8, 0x5F, 0x1A,
                0x98, 0x5B, 0xEA, 0x81, 0xD4, 0x26, 0xAF, 0x39, 0x9D, 0xD9, 0x40, 0x58,
                0x13, 0xEB, 0x3D, 0xA4, 0x7C, 0x08, 0xE9, 0xE3, 0x80, 0xA1, 0x7D, 0xEE,
                0x1A, 0x39, 0x4D, 0x57, 0xB7, 0xC4, 0x7F, 0x02, 0xAD, 0x01, 0x8E, 0x52,
                0xFE, 0x5B, 0x97, 0x58, 0x0E, 0x5C, 0xA1, 0xF8, 0xE3, 0x99, 0x9B, 0xD4,
                0x8B, 0xD1, 0xE8, 0xDF, 0xFA, 0x5A, 0x82, 0xDA, 0x8C, 0xAA, 0x4B, 0x1C,
                0x4A, 0x76, 0xBD, 0x20, 0xC9, 0x5A, 0x11, 0x99, 0x0D, 0xC0, 0x68, 0xC3,
                0xB5, 0x16, 0x66, 0xD3, 0x46, 0x72, 0x6D, 0x92, 0xA6, 0x9F, 0x8C, 0xE6,
                0x52, 0x97, 0x3B, 0xA6, 0x63, 0x67, 0x7E, 0xDF, 0x67, 0xD7, 0x30, 0xF1,
                0x10, 0x4E, 0x96, 0x0A, 0x8D, 0x8A, 0xEC, 0x53, 0xBD, 0xFC, 0x58, 0xB4,
                0x6E, 0x36, 0x5F, 0x86, 0x3D, 0xE3, 0xD2, 0x95, 0xF4, 0x84, 0xC2, 0xB3,
                0xD2, 0xF5, 0xA3, 0x36, 0xAD, 0xFD, 0xE4, 0xAE, 0x7D, 0x47, 0x5D, 0xDE,
                0x27, 0x24, 0xD0, 0x45, 0x52, 0x0B, 0x2D, 0x62, 0x0D, 0xB9, 0x36, 0x19,
                0x4F, 0xDF, 0x67, 0x12, 0xCE, 0xD6, 0x5A, 0x67, 0x17, 0x67, 0x63, 0x22,
                0xA5, 0x4F, 0x91, 0xBC, 0x32, 0x63, 0x97, 0xBC, 0xDE, 0xB0, 0x71, 0x2F,
                0x7C, 0xD6, 0xB1, 0x2E, 0x6E, 0xE3, 0x87, 0x9C, 0xEC, 0x54, 0x16, 0x63
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.8 builtin DH 1536-bit',
        source='ProFTPD source code',
        key_size=1536,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_8_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xA2, 0x46, 0x65, 0xEA, 0x09, 0x2A, 0x47, 0x9D, 0x3C, 0x57, 0xA6, 0xDB,
                0xF6, 0xAD, 0xD3, 0x84, 0xEA, 0x2D, 0x69, 0x97, 0xBF, 0x5C, 0xEC, 0x09,
                0xF9, 0x1B, 0x27, 0xF9, 0xAC, 0x05, 0x1B, 0xBA, 0x7A, 0x38, 0x85, 0x33,
                0x10, 0xBA, 0x2F, 0x06, 0xEF, 0x9F, 0x31, 0xA7, 0xCD, 0xE9, 0x10, 0x51,
                0x10, 0x06, 0x02, 0xCF, 0x80, 0xFC, 0xAD, 0x30, 0xCC, 0x70, 0xA4, 0xBA,
                0x95, 0x28, 0x3F, 0xCB, 0x60, 0xF9, 0xF2, 0x7A, 0x63, 0x43, 0x77, 0x6B,
                0x0E, 0xB3, 0x94, 0x8E, 0xE0, 0xBA, 0xDD, 0x2E, 0x1A, 0xF6, 0x77, 0x82,
                0xC5, 0xBD, 0x9C, 0xD4, 0xB4, 0x61, 0x49, 0xD7, 0x0A, 0x72, 0x39, 0xB4,
                0x9A, 0x9B, 0xD0, 0x04, 0x17, 0x00, 0x52, 0xC0, 0xEC, 0x93, 0x78, 0x8C,
                0x29, 0xC7, 0x89, 0xCC, 0xFA, 0x91, 0xEF, 0xF4, 0xC9, 0x57, 0x40, 0x0A,
                0xBA, 0x28, 0x0F, 0x7C, 0x70, 0x64, 0x87, 0xB7, 0xEE, 0x07, 0xC6, 0x74,
                0x84, 0xD9, 0x36, 0x76, 0x8B, 0x70, 0xAF, 0x31, 0x0F, 0xBC, 0x0E, 0x4D,
                0x14, 0xA5, 0xE7, 0x4F, 0x7F, 0x15, 0xE6, 0xF3, 0xF2, 0x00, 0x59, 0x99,
                0x38, 0x7B, 0x18, 0x57, 0x17, 0x27, 0xD4, 0x67, 0x12, 0x2F, 0x59, 0x2D,
                0x35, 0x0D, 0x48, 0xF6, 0x2C, 0x61, 0xE3, 0xD7, 0x4C, 0x5B, 0x6D, 0x2F,
                0xB0, 0x05, 0xA7, 0x7C, 0xDB, 0xC9, 0x31, 0x71, 0x2E, 0x05, 0x25, 0x92,
                0x2A, 0x40, 0x23, 0x80, 0x48, 0xC8, 0xFE, 0xA2, 0xF9, 0x5B, 0x37, 0xFB,
                0x42, 0x68, 0x93, 0xEF, 0x66, 0x5C, 0x26, 0x06, 0xD5, 0x3D, 0x26, 0x1D,
                0x8B, 0x84, 0xEF, 0xE6, 0xF8, 0x74, 0x2C, 0x2E, 0x40, 0xAD, 0xDB, 0x9B,
                0x1E, 0x45, 0xFF, 0x08, 0x6B, 0x5F, 0xF5, 0x17, 0x31, 0x0E, 0xEF, 0x21,
                0xE7, 0x61, 0x0A, 0xFA, 0xA2, 0x69, 0xEF, 0xBC, 0x6F, 0xE9, 0xCF, 0x94,
                0xE2, 0xA0, 0xC7, 0x8B
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.8 builtin DH 2048-bit',
        source='ProFTPD source code',
        key_size=2048,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_8_BIT_3072 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xC1, 0xD8, 0x7C, 0x6C, 0x10, 0x67, 0xE0, 0xFC, 0xB4, 0x17, 0x37, 0x25,
                0x88, 0x82, 0x72, 0xF8, 0x3E, 0xCC, 0x59, 0x7B, 0x50, 0xD7, 0x42, 0xCE,
                0x0A, 0x29, 0x11, 0x1D, 0x07, 0x6D, 0x81, 0x00, 0x78, 0x45, 0xB8, 0x70,
                0x6F, 0x88, 0x67, 0x1F, 0x24, 0xF4, 0xDF, 0x7B, 0x72, 0xB4, 0x85, 0x42,
                0xFA, 0x05, 0xDE, 0x1C, 0xE9, 0xDF, 0x7A, 0x6F, 0x72, 0xD2, 0x23, 0x96,
                0x0E, 0xB1, 0xE9, 0x0F, 0x58, 0xBF, 0x56, 0x96, 0xB1, 0xF2, 0x22, 0xB3,
                0x9C, 0xE0, 0xAA, 0xFC, 0x75, 0xF5, 0xD5, 0x8C, 0x54, 0x22, 0xC3, 0x3B,
                0xE1, 0x61, 0xB7, 0x6F, 0x47, 0x19, 0xC5, 0x37, 0xF2, 0x05, 0x10, 0x19,
                0x80, 0x34, 0x90, 0xD7, 0xBE, 0x8D, 0x32, 0xD6, 0x9B, 0x27, 0x63, 0x45,
                0x04, 0xF4, 0xC4, 0xA6, 0x4E, 0x0D, 0x52, 0x0C, 0xB5, 0xD6, 0x09, 0x2A,
                0x7F, 0xC1, 0x71, 0x42, 0xBE, 0x59, 0xA4, 0xAE, 0xCB, 0xDE, 0x2D, 0x28,
                0xCE, 0x06, 0x12, 0x09, 0x40, 0x59, 0xC3, 0x1A, 0xFB, 0x71, 0x87, 0xA9,
                0xFE, 0x74, 0x3B, 0x54, 0x8E, 0xC6, 0x36, 0xFB, 0x67, 0x7B, 0xB0, 0x5C,
                0xD5, 0x34, 0x7F, 0xE1, 0x4F, 0xE1, 0x61, 0xEA, 0xB1, 0x99, 0x3F, 0xF1,
                0x8B, 0xF4, 0x4A, 0x9D, 0x6D, 0xCD, 0x16, 0x4B, 0x58, 0xAE, 0x2C, 0xA1,
                0xD7, 0x98, 0x50, 0x72, 0xD7, 0x88, 0x24, 0x0C, 0x84, 0x19, 0x01, 0x6F,
                0x15, 0x56, 0xFD, 0x05, 0x75, 0xB7, 0x2E, 0xA8, 0xCA, 0xA9, 0x6B, 0x36,
                0x0B, 0xA1, 0xDC, 0x88, 0xDD, 0x47, 0xCF, 0xA7, 0x19, 0xB4, 0xDB, 0x9A,
                0xD7, 0xD0, 0xF4, 0x3C, 0x45, 0x82, 0x24, 0xE9, 0x0F, 0x7D, 0xA3, 0x01,
                0xF3, 0x83, 0xB3, 0x2F, 0x6C, 0xF0, 0xE4, 0x65, 0x75, 0x7D, 0x7B, 0x81,
                0x41, 0x62, 0x73, 0x03, 0x2B, 0x28, 0xDE, 0x0C, 0xA9, 0x0F, 0xA3, 0x52,
                0x70, 0xCB, 0x19, 0x60, 0x5B, 0x49, 0x9D, 0xF0, 0xE5, 0x2D, 0x1C, 0x16,
                0xB8, 0xA7, 0x11, 0x1D, 0xCC, 0xD1, 0x4C, 0xE9, 0x5A, 0x55, 0x5A, 0x53,
                0x30, 0x35, 0x06, 0x58, 0x73, 0x73, 0x5A, 0x0A, 0xCA, 0xA8, 0x46, 0xF2,
                0x7A, 0xC3, 0x6B, 0x10, 0x7E, 0xD4, 0xEF, 0x93, 0x35, 0xB4, 0x4E, 0xE5,
                0xC3, 0x2A, 0x93, 0xC4, 0xC6, 0xE2, 0x23, 0x7D, 0x29, 0x10, 0x06, 0x97,
                0x4C, 0x0F, 0x1B, 0xA0, 0x43, 0xBF, 0xF9, 0x0C, 0x25, 0x81, 0x6E, 0xC8,
                0x07, 0x08, 0xEE, 0x28, 0x61, 0x83, 0x10, 0x3A, 0xC3, 0x2D, 0xB8, 0xCE,
                0xD2, 0x45, 0x2A, 0x31, 0xCC, 0xBF, 0xCB, 0xB6, 0xD6, 0x3A, 0x71, 0xFC,
                0xDD, 0xE7, 0x47, 0x3A, 0xB9, 0x5C, 0xF7, 0x81, 0xC1, 0x0D, 0x25, 0x03,
                0xF8, 0x59, 0x04, 0x92, 0x88, 0xAA, 0x80, 0x9C, 0xE3, 0x32, 0x79, 0x26,
                0x41, 0xE9, 0xC1, 0x44, 0xE6, 0xF6, 0xBF, 0x59, 0xE6, 0x15, 0x1E, 0x53
            ])), 16),
            g=0x2,
        ),
        name='ProFTPD 1.3.8 builtin DH 3072-bit',
        source='ProFTPD source code',
        key_size=3072,
    )
    APPLICATION_SERVER_PROFTPD_VERSION_1_3_8_BIT_4096 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x93, 0x3D, 0x4B, 0xD6, 0x87, 0xFE, 0x47, 0xDF, 0x68, 0x48, 0x2A, 0x8B,
                0x16, 0x10, 0xFE, 0x46, 0xFC, 0xC0, 0x4C, 0x40, 0xF4, 0x46, 0x36, 0x8C,
                0x4A, 0xDA, 0x05, 0xE8, 0x6E, 0xF2, 0x12, 0x01, 0xE8, 0xA6, 0x16, 0x02,
                0x84, 0x70, 0x4E, 0xFC, 0x99, 0x1B, 0x3C, 0x88, 0x15, 0x4A, 0xB9, 0xDC,
                0xDC, 0xB5, 0xC4, 0xDD, 0x67, 0xF8, 0x2E, 0x99, 0x4C, 0x01, 0x17, 0x45,
                0x33, 0x1F, 0x47, 0x9B, 0x18, 0x96, 0x82, 0x7F, 0x89, 0x67, 0xBE, 0x57,
                0x80, 0x20, 0x09, 0x70, 0xFE, 0x07, 0x99, 0x9F, 0xF7, 0x10, 0xF4, 0x19,
                0xC7, 0xEF, 0x51, 0x13, 0xF3, 0x47, 0xBF, 0x99, 0xFE, 0x89, 0xC1, 0xBB,
                0x2E, 0xF2, 0x75, 0xAC, 0xCA, 0xA4, 0x68, 0x91, 0x12, 0xFF, 0x87, 0x40,
                0x5D, 0xAD, 0x5D, 0x30, 0x5F, 0xF2, 0xC9, 0xE6, 0xF3, 0xC5, 0x7E, 0x92,
                0x3A, 0xB1, 0x1B, 0xBE, 0xE2, 0xC4, 0xE8, 0x93, 0x3A, 0xC1, 0xF0, 0xFB,
                0xE2, 0x74, 0x3A, 0xD4, 0xB8, 0x8C, 0xD5, 0xBE, 0xF4, 0x96, 0x4B, 0x5E,
                0x0E, 0x52, 0x8B, 0x5F, 0x33, 0xDB, 0xAA, 0xF5, 0x46, 0x7D, 0x83, 0x2B,
                0xB1, 0x0D, 0x50, 0xB5, 0x4F, 0xE4, 0xE4, 0xF3, 0x6F, 0xAD, 0x34, 0xCE,
                0x11, 0xA4, 0xB0, 0xC1, 0xE0, 0x1D, 0xA4, 0xE7, 0x73, 0xE0, 0xAD, 0x4E,
                0x26, 0x94, 0x5D, 0x9D, 0xCD, 0x4F, 0x23, 0x3F, 0x3C, 0xB1, 0xA2, 0x1D,
                0x64, 0x0E, 0xCB, 0xB9, 0x47, 0xC4, 0x07, 0x63, 0xBF, 0x67, 0x83, 0xF9,
                0x4E, 0x2A, 0x6A, 0x2C, 0x24, 0xD1, 0x34, 0x5B, 0x2F, 0xEF, 0xB6, 0x73,
                0x0B, 0xA2, 0xA5, 0x7A, 0x58, 0xB7, 0x15, 0xCD, 0x77, 0x4E, 0x49, 0x06,
                0x32, 0x73, 0x09, 0x37, 0x11, 0xE4, 0x65, 0x1E, 0x2F, 0x5A, 0xC1, 0xDE,
                0xC3, 0x84, 0xCE, 0x63, 0xA3, 0x9A, 0xA8, 0xA9, 0x40, 0xDC, 0x6D, 0xD4,
                0xB9, 0x56, 0xB4, 0x16, 0x17, 0x61, 0x68, 0x4F, 0xCD, 0x1A, 0x40, 0x58,
                0xEA, 0x7A, 0x0C, 0x3D, 0x63, 0x85, 0x6B, 0x56, 0x64, 0x1D, 0x07, 0xBE,
                0xE1, 0x13, 0x0A, 0x32, 0x42, 0xD0, 0xA8, 0xA2, 0xCF, 0x4B, 0x7C, 0x24,
                0xCB, 0xF9, 0xD0, 0xE3, 0x0C, 0xCD, 0x34, 0xD1, 0x24, 0x91, 0x12, 0x3F,
                0x0E, 0xEA, 0xF6, 0x70, 0xD5, 0xFA, 0x61, 0x9E, 0xB1, 0x88, 0x73, 0xFC,
                0xE6, 0x20, 0xB1, 0xCA, 0x9F, 0x34, 0x55, 0x91, 0xE6, 0xCA, 0x33, 0xE5,
                0x3E, 0xD2, 0xB0, 0x45, 0xEE, 0x40, 0x95, 0xCE, 0x76, 0x9E, 0xFA, 0x08,
                0xB7, 0xFB, 0xA0, 0x4C, 0xEA, 0x00, 0x32, 0xEA, 0xC4, 0x84, 0x07, 0x53,
                0x12, 0xA7, 0xBC, 0x3D, 0xE8, 0x19, 0xE7, 0x63, 0x13, 0x37, 0x55, 0x48,
                0xE2, 0xC4, 0xE7, 0x13, 0xDA, 0x66, 0x01, 0x07, 0xBB, 0x11, 0x58, 0x6C,
                0x39, 0x49, 0xE3, 0x35, 0xA2, 0x8B, 0x0A, 0xEE, 0x5B, 0xD0, 0x09, 0x84,
                0x05, 0x7A, 0x64, 0x42, 0xF9, 0xC3, 0x7C, 0xE9, 0x0B, 0x05, 0xD8, 0x40,
                0x45, 0x32, 0xC3, 0x20, 0xCF, 0xA3, 0x14, 0x67, 0xBA, 0x41, 0x58, 0xE4,
                0xD8, 0x00, 0xF5, 0xCD, 0xF5, 0x52, 0xD5, 0xC4, 0x2B, 0xED, 0x7D, 0x9A,
                0x5F, 0x74, 0x52, 0xAF, 0x13, 0x09, 0x46, 0xEB, 0x2A, 0x36, 0x8E, 0x7B,
                0x1F, 0x55, 0xBF, 0xAF, 0xE0, 0xB5, 0xD4, 0x0E, 0xE8, 0x36, 0xEA, 0xC2,
                0x8B, 0x82, 0x3E, 0x61, 0x7B, 0x4E, 0x1F, 0xD9, 0x7E, 0xB3, 0xCE, 0x10,
                0xE6, 0xD7, 0xEA, 0x03, 0xF2, 0x2A, 0xB6, 0xD9, 0xC3, 0x98, 0x20, 0x3B,
                0x98, 0x73, 0xF4, 0x7A, 0x44, 0x67, 0x03, 0x0E, 0x2B, 0xD0, 0xDE, 0x85,
                0xF5, 0x19, 0x6B, 0xA0, 0xD5, 0xBA, 0xE6, 0x17, 0x04, 0x70, 0x87, 0x5B,
                0xBD, 0xE7, 0xEA, 0x4A, 0xE1, 0x40, 0x8A, 0x4C, 0xF0, 0x22, 0x20, 0x00,
                0xA5, 0x88, 0x75, 0xD8, 0xC1, 0x70, 0x6B, 0xA3
            ])), 16),
            g=0x5,
        ),
        name='ProFTPD 1.3.8 builtin DH 4096-bit',
        source='ProFTPD source code',
        key_size=4096,
    )
    APPLICATION_SERVER_NGINX_VERSION_0_7_2_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xBB, 0xBC, 0x2D, 0xCA, 0xD8, 0x46, 0x74, 0x90, 0x7C, 0x43, 0xFC, 0xF5,
                0x80, 0xE9, 0xCF, 0xDB, 0xD9, 0x58, 0xA3, 0xF5, 0x68, 0xB4, 0x2D, 0x4B,
                0x08, 0xEE, 0xD4, 0xEB, 0x0F, 0xB3, 0x50, 0x4C, 0x6C, 0x03, 0x02, 0x76,
                0xE7, 0x10, 0x80, 0x0C, 0x5C, 0xCB, 0xBA, 0xA8, 0x92, 0x26, 0x14, 0xC5,
                0xBE, 0xEC, 0xA5, 0x65, 0xA5, 0xFD, 0xF1, 0xD2, 0x87, 0xA2, 0xBC, 0x04,
                0x9B, 0xE6, 0x77, 0x80, 0x60, 0xE9, 0x1A, 0x92, 0xA7, 0x57, 0xE3, 0x04,
                0x8F, 0x68, 0xB0, 0x76, 0xF7, 0xD3, 0x6C, 0xC8, 0xF2, 0x9B, 0xA5, 0xDF,
                0x81, 0xDC, 0x2C, 0xA7, 0x25, 0xEC, 0xE6, 0x62, 0x70, 0xCC, 0x9A, 0x50,
                0x35, 0xD8, 0xCE, 0xCE, 0xEF, 0x9E, 0xA0, 0x27, 0x4A, 0x63, 0xAB, 0x1E,
                0x58, 0xFA, 0xFD, 0x49, 0x88, 0xD0, 0xF6, 0x5D, 0x14, 0x67, 0x57, 0xDA,
                0x07, 0x1D, 0xF0, 0x45, 0xCF, 0xE1, 0x6B, 0x9B
            ])), 16),
            g=0x2,
        ),
        name='NGINX 0.7.2 builtin DH 1024-bit',
        source='NGINX source code',
        key_size=1024,
    )
    APPLICATION_SERVER_APACHE_VERSION_2_0_18_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xD4, 0xBC, 0xD5, 0x24, 0x06, 0xF6, 0x9B, 0x35, 0x99, 0x4B, 0x88, 0xDE,
                0x5D, 0xB8, 0x96, 0x82, 0xC8, 0x15, 0x7F, 0x62, 0xD8, 0xF3, 0x36, 0x33,
                0xEE, 0x57, 0x72, 0xF1, 0x1F, 0x05, 0xAB, 0x22, 0xD6, 0xB5, 0x14, 0x5B,
                0x9F, 0x24, 0x1E, 0x5A, 0xCC, 0x31, 0xFF, 0x09, 0x0A, 0x4B, 0xC7, 0x11,
                0x48, 0x97, 0x6F, 0x76, 0x79, 0x50, 0x94, 0xE7, 0x1E, 0x79, 0x03, 0x52,
                0x9F, 0x5A, 0x82, 0x4B,
            ])), 16),
            g=0x2,
        ),
        name='Apache 2.0.18 builtin DH 512-bit',
        source='Apache source code',
        key_size=512,
    )
    APPLICATION_SERVER_APACHE_VERSION_2_0_18_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xE6, 0x96, 0x9D, 0x3D, 0x49, 0x5B, 0xE3, 0x2C, 0x7C, 0xF1, 0x80, 0xC3,
                0xBD, 0xD4, 0x79, 0x8E, 0x91, 0xB7, 0x81, 0x82, 0x51, 0xBB, 0x05, 0x5E,
                0x2A, 0x20, 0x64, 0x90, 0x4A, 0x79, 0xA7, 0x70, 0xFA, 0x15, 0xA2, 0x59,
                0xCB, 0xD5, 0x23, 0xA6, 0xA6, 0xEF, 0x09, 0xC4, 0x30, 0x48, 0xD5, 0xA2,
                0x2F, 0x97, 0x1F, 0x3C, 0x20, 0x12, 0x9B, 0x48, 0x00, 0x0E, 0x6E, 0xDD,
                0x06, 0x1C, 0xBC, 0x05, 0x3E, 0x37, 0x1D, 0x79, 0x4E, 0x53, 0x27, 0xDF,
                0x61, 0x1E, 0xBB, 0xBE, 0x1B, 0xAC, 0x9B, 0x5C, 0x60, 0x44, 0xCF, 0x02,
                0x3D, 0x76, 0xE0, 0x5E, 0xEA, 0x9B, 0xAD, 0x99, 0x1B, 0x13, 0xA6, 0x3C,
                0x97, 0x4E, 0x9E, 0xF1, 0x83, 0x9E, 0xB5, 0xDB, 0x12, 0x51, 0x36, 0xF7,
                0x26, 0x2E, 0x56, 0xA8, 0x87, 0x15, 0x38, 0xDF, 0xD8, 0x23, 0xC6, 0x50,
                0x50, 0x85, 0xE2, 0x1F, 0x0D, 0xD5, 0xC8, 0x6B,
            ])), 16),
            g=0x2,
        ),
        name='Apache 2.0.18 builtin DH 1024-bit',
        source='Apache source code',
        key_size=1024,
    )
    APPLICATION_SERVER_APACHE_VERSION_2_1_5_BIT_512 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x9F, 0xDB, 0x8B, 0x8A, 0x00, 0x45, 0x44, 0xF0, 0x04, 0x5F, 0x17, 0x37,
                0xD0, 0xBA, 0x2E, 0x0B, 0x27, 0x4C, 0xDF, 0x1A, 0x9F, 0x58, 0x82, 0x18,
                0xFB, 0x43, 0x53, 0x16, 0xA1, 0x6E, 0x37, 0x41, 0x71, 0xFD, 0x19, 0xD8,
                0xD8, 0xF3, 0x7C, 0x39, 0xBF, 0x86, 0x3F, 0xD6, 0x0E, 0x3E, 0x30, 0x06,
                0x80, 0xA3, 0x03, 0x0C, 0x6E, 0x4C, 0x37, 0x57, 0xD0, 0x8F, 0x70, 0xE6,
                0xAA, 0x87, 0x10, 0x33,
            ])), 16),
            g=0x2,
        ),
        name='Apache 2.1.5 builtin DH 512-bit',
        source='Apache source code',
        key_size=512,
    )
    APPLICATION_SERVER_APACHE_VERSION_2_1_5_BIT_1024 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0xD6, 0x7D, 0xE4, 0x40, 0xCB, 0xBB, 0xDC, 0x19, 0x36, 0xD6, 0x93, 0xD3,
                0x4A, 0xFD, 0x0A, 0xD5, 0x0C, 0x84, 0xD2, 0x39, 0xA4, 0x5F, 0x52, 0x0B,
                0xB8, 0x81, 0x74, 0xCB, 0x98, 0xBC, 0xE9, 0x51, 0x84, 0x9F, 0x91, 0x2E,
                0x63, 0x9C, 0x72, 0xFB, 0x13, 0xB4, 0xB4, 0xD7, 0x17, 0x7E, 0x16, 0xD5,
                0x5A, 0xC1, 0x79, 0xBA, 0x42, 0x0B, 0x2A, 0x29, 0xFE, 0x32, 0x4A, 0x46,
                0x7A, 0x63, 0x5E, 0x81, 0xFF, 0x59, 0x01, 0x37, 0x7B, 0xED, 0xDC, 0xFD,
                0x33, 0x16, 0x8A, 0x46, 0x1A, 0xAD, 0x3B, 0x72, 0xDA, 0xE8, 0x86, 0x00,
                0x78, 0x04, 0x5B, 0x07, 0xA7, 0xDB, 0xCA, 0x78, 0x74, 0x08, 0x7D, 0x15,
                0x10, 0xEA, 0x9F, 0xCC, 0x9D, 0xDD, 0x33, 0x05, 0x07, 0xDD, 0x62, 0xDB,
                0x88, 0xAE, 0xAA, 0x74, 0x7D, 0xE0, 0xF4, 0xD6, 0xE2, 0xBD, 0x68, 0xB0,
                0xE7, 0x39, 0x3E, 0x0F, 0x24, 0x21, 0x8E, 0xB3,
            ])), 16),
            g=0x2,
        ),
        name='Apache 2.1.5 builtin DH 1024-bit',
        source='Apache source code',
        key_size=1024,
    )
    APPLICATION_SERVER_SOCAT_VERSION_1_7_3_BIT_2048 = DHParamWellKnown(
        DHParameterNumbers(
            p=int(''.join(map('{:02x}'.format, [
                0x00, 0xdc, 0x21, 0x64, 0x56, 0xbd, 0x9c, 0xb2, 0xac, 0xbe, 0xc9, 0x98, 0xef, 0x95, 0x3e,
                0x26, 0xfa, 0xb5, 0x57, 0xbc, 0xd9, 0xe6, 0x75, 0xc0, 0x43, 0xa2, 0x1c, 0x7a, 0x85, 0xdf,
                0x34, 0xab, 0x57, 0xa8, 0xf6, 0xbc, 0xf6, 0x84, 0x7d, 0x05, 0x69, 0x04, 0x83, 0x4c, 0xd5,
                0x56, 0xd3, 0x85, 0x09, 0x0a, 0x08, 0xff, 0xb5, 0x37, 0xa1, 0xa3, 0x8a, 0x37, 0x04, 0x46,
                0xd2, 0x93, 0x31, 0x96, 0xf4, 0xe4, 0x0d, 0x9f, 0xbd, 0x3e, 0x7f, 0x9e, 0x4d, 0xaf, 0x08,
                0xe2, 0xe8, 0x03, 0x94, 0x73, 0xc4, 0xdc, 0x06, 0x87, 0xbb, 0x6d, 0xae, 0x66, 0x2d, 0x18,
                0x1f, 0xd8, 0x47, 0x06, 0x5c, 0xcf, 0x8a, 0xb5, 0x00, 0x51, 0x57, 0x9b, 0xea, 0x1e, 0xd8,
                0xdb, 0x8e, 0x3c, 0x1f, 0xd3, 0x2f, 0xba, 0x1f, 0x5f, 0x3d, 0x15, 0xc1, 0x3b, 0x2c, 0x82,
                0x42, 0xc8, 0x8c, 0x87, 0x79, 0x5b, 0x38, 0x86, 0x3a, 0xeb, 0xfd, 0x81, 0xa9, 0xba, 0xf7,
                0x26, 0x5b, 0x93, 0xc5, 0x3e, 0x03, 0x30, 0x4b, 0x00, 0x5c, 0xb6, 0x23, 0x3e, 0xea, 0x94,
                0xc3, 0xb4, 0x71, 0xc7, 0x6e, 0x64, 0x3b, 0xf8, 0x92, 0x65, 0xad, 0x60, 0x6c, 0xd4, 0x7b,
                0xa9, 0x67, 0x26, 0x04, 0xa8, 0x0a, 0xb2, 0x06, 0xeb, 0xe0, 0x7d, 0x90, 0xdd, 0xdd, 0xf5,
                0xcf, 0xb4, 0x11, 0x7c, 0xab, 0xc1, 0xa3, 0x84, 0xbe, 0x27, 0x77, 0xc7, 0xde, 0x20, 0x57,
                0x66, 0x47, 0xa7, 0x35, 0xfe, 0x0d, 0x6a, 0x1c, 0x52, 0xb8, 0x58, 0xbf, 0x26, 0x33, 0x81,
                0x5e, 0xb7, 0xa9, 0xc0, 0xee, 0x58, 0x11, 0x74, 0x86, 0x19, 0x08, 0x89, 0x1c, 0x37, 0x0d,
                0x52, 0x47, 0x70, 0x75, 0x8b, 0xa8, 0x8b, 0x30, 0x11, 0x71, 0x36, 0x62, 0xf0, 0x73, 0x41,
                0xee, 0x34, 0x9d, 0x0a, 0x2b, 0x67, 0x4e, 0x6a, 0xa3, 0xe2, 0x99, 0x92, 0x1b, 0xf5, 0x32,
                0x73, 0x63
            ])), 16),
            g=0x2,
        ),
        name='socat 1.7.3 builtin DH 2048-bit',
        source='socat source code',
        key_size=2048,
    )


class TlsDHParamVector(Vector):  # pylint: disable=too-many-ancestors
    @classmethod
    def get_param(cls):
        return VectorParamNumeric(item_size=1, min_byte_num=1, max_byte_num=2 ** 16 - 1)


def bytes_to_int(bytes_value):
    return int(''.join(map('{:02x}'.format, bytes_value)), 16)


def int_to_bytes(int_value, size):
    hex_value = '%x' % int_value
    str_value = ('0' * (size - len(hex_value))) + hex_value

    return bytearray(codecs.decode(str_value, 'hex'))


def get_dh_public_key_from_bytes(p_bytes, g_bytes, y_bytes):
    parameter_numbers = DHParameterNumbers(bytes_to_int(p_bytes), bytes_to_int(g_bytes))
    public_numbers = DHPublicNumbers(bytes_to_int(y_bytes), parameter_numbers)

    return DHPublicKey(public_numbers, len(bytearray(p_bytes).lstrip(b'\x00')) * 8)


def get_dh_ephemeral_key_forged(prime):
    return prime // 2 + 1


def get_ecdh_ephemeral_key_forged(named_group):
    key_size_in_bytes = int(math.ceil(named_group.value.size / 8))

    if named_group in [NamedGroup.CURVE25519, NamedGroup.CURVE448]:
        ephemeral_public_key_bytes = key_size_in_bytes * b'\xff'
    else:
        well_know_ec_param = WellKnownECParams.from_named_group(named_group)
        ephemeral_public_key_bytes = bytearray().join([
            b'\x04',  # uncompressed point format
            int_to_bytes(well_know_ec_param.value.parameter_numbers.x, key_size_in_bytes),
            int_to_bytes(well_know_ec_param.value.parameter_numbers.y, key_size_in_bytes),
        ])

    return ephemeral_public_key_bytes


def parse_tls_dh_params(param_bytes):
    parser = ParserBinary(param_bytes)

    parser.parse_parsable('p', TlsDHParamVector)
    parser.parse_parsable('g', TlsDHParamVector)
    parser.parse_parsable('y', TlsDHParamVector)

    return get_dh_public_key_from_bytes(parser['p'], parser['g'], parser['y'])


def parse_ecdh_params(param_bytes):
    parser = ParserBinary(param_bytes)

    parser.parse_numeric('curve_type', 1, TlsECCurveType)

    if parser['curve_type'] != TlsECCurveType.NAMED_CURVE:
        raise NotImplementedError(parser['curve_type'])

    parser.parse_parsable('named_curve', TlsNamedCurveFactory)

    parser.parse_numeric('public_key_length', 1)
    parser.parse_raw('public_key', parser['public_key_length'])

    return parser['named_curve'], parser['public_key']


@attr.s
class DHParameter(Serializable):
    parameter_numbers = attr.ib(validator=attr.validators.instance_of(DHParameterNumbers))
    key_size = attr.ib(validator=attr.validators.instance_of(six.integer_types))
    well_known = attr.ib(init=False, validator=attr.validators.in_(WellKnownDHParams))
    prime = attr.ib(init=False, validator=attr.validators.instance_of(bool))
    safe_prime = attr.ib(init=False, validator=attr.validators.instance_of(bool))

    def _check_prime(self):
        param_num_p = self.parameter_numbers.p
        param_num_g = self.parameter_numbers.g

        self.prime, self.safe_prime = prime_precheck(param_num_p, param_num_g)

        # If the number is not divisible by any of the small primes, then
        # move on to the full Miller-Rabin test.
        self.prime = is_prime(self.key_size, param_num_p)
        if self.prime:
            self.safe_prime = is_prime(self.key_size, param_num_p // 2)

    def __attrs_post_init__(self):
        for well_know_public_number in WellKnownDHParams:
            if self.parameter_numbers == well_know_public_number.value.dh_param_numbers:
                self.well_known = well_know_public_number
                self.prime = True
                self.safe_prime = well_know_public_number.value.safe_prime
                break
        else:
            self.well_known = None
            self._check_prime()

    def _asdict(self):
        result = attr.asdict(self, recurse=False, dict_factory=collections.OrderedDict)
        if self.well_known:
            result['parameter_numbers'] = None

        return result
